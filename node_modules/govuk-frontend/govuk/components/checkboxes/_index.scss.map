{"version":3,"sources":["../../../../src/govuk/components/checkboxes/_index.scss"],"names":[],"mappings":"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","file":"_index.scss","sourcesContent":["@import \"../error-message/index\";\n@import \"../fieldset/index\";\n@import \"../hint/index\";\n@import \"../label/index\";\n\n@include govuk-exports(\"govuk/component/checkboxes\") {\n\n  $govuk-touch-target-size: 44px;\n  $govuk-checkboxes-size: 40px;\n  $govuk-small-checkboxes-size: 24px;\n  $govuk-checkboxes-label-padding-left-right: govuk-spacing(3);\n\n  .govuk-checkboxes__item {\n    @include govuk-font($size: 19);\n\n    display: block;\n    position: relative;\n\n    min-height: $govuk-checkboxes-size;\n\n    margin-bottom: govuk-spacing(2);\n    padding-left: $govuk-checkboxes-size;\n\n    clear: left;\n  }\n\n  .govuk-checkboxes__item:last-child,\n  .govuk-checkboxes__item:last-of-type {\n    margin-bottom: 0;\n  }\n\n  .govuk-checkboxes__input {\n    $input-offset: ($govuk-touch-target-size - $govuk-checkboxes-size) / 2;\n\n    cursor: pointer;\n\n    // IE8 doesn’t support pseudo-elements, so we don’t want to hide native\n    // elements there.\n    @include _govuk-not-ie8 {\n      position: absolute;\n\n      z-index: 1;\n      top: $input-offset * -1;\n      left: $input-offset * -1;\n\n      width: $govuk-touch-target-size;\n      height: $govuk-touch-target-size;\n      margin: 0;\n\n      opacity: 0;\n    }\n\n    @include _govuk-if-ie8 {\n      margin-top: 10px;\n      margin-right: $govuk-checkboxes-size / -2;\n      margin-left: $govuk-checkboxes-size / -2;\n      float: left;\n\n      // add focus outline to input\n      &:focus {\n        outline: $govuk-focus-width solid $govuk-focus-colour;\n      }\n    }\n  }\n\n  .govuk-checkboxes__label {\n    display: inline-block;\n    margin-bottom: 0;\n    padding: 8px $govuk-checkboxes-label-padding-left-right govuk-spacing(1);\n    cursor: pointer;\n    // remove 300ms pause on mobile\n    touch-action: manipulation;\n  }\n\n  @include _govuk-not-ie8 {\n    // [ ] Check box\n    .govuk-checkboxes__label:before {\n      content: \"\";\n      box-sizing: border-box;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: $govuk-checkboxes-size;\n      height: $govuk-checkboxes-size;\n      border: $govuk-border-width-form-element solid currentcolor;\n      background: transparent;\n    }\n\n    // ✔ Check mark\n    //\n    // The check mark is a box with a border on the left and bottom side (└──),\n    // rotated 45 degrees\n    .govuk-checkboxes__label:after {\n      content: \"\";\n      box-sizing: border-box;\n\n      position: absolute;\n      top: 11px;\n      left: 9px;\n      width: 23px;\n      height: 12px;\n\n      transform: rotate(-45deg);\n      border: solid;\n      border-width: 0 0 5px 5px;\n      // Fix bug in IE11 caused by transform rotate (-45deg).\n      // See: alphagov/govuk_elements/issues/518\n      border-top-color: transparent;\n\n      opacity: 0;\n\n      background: transparent;\n    }\n  }\n\n  .govuk-checkboxes__hint {\n    display: block;\n    padding-right: $govuk-checkboxes-label-padding-left-right;\n    padding-left: $govuk-checkboxes-label-padding-left-right;\n  }\n\n  // Focused state\n  .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n    border-width: 4px;\n\n    // When colours are overridden, the yellow box-shadow becomes invisible\n    // which means the focus state is less obvious. By adding a transparent\n    // outline, which becomes solid (text-coloured) in that context, we ensure\n    // the focus remains clearly visible.\n    outline: $govuk-focus-width solid transparent;\n    outline-offset: 1px;\n\n    // When in an explicit forced-color mode, we can use the Highlight system\n    // color for the outline to better match focus states of native controls\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      outline-color: Highlight;\n    }\n\n    box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\n  }\n\n  // Selected state\n  .govuk-checkboxes__input:checked + .govuk-checkboxes__label:after {\n    opacity: 1;\n  }\n\n  // Disabled state\n  .govuk-checkboxes__input:disabled,\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label {\n    cursor: not-allowed;\n  }\n\n  .govuk-checkboxes__input:disabled + .govuk-checkboxes__label,\n  .govuk-checkboxes__input:disabled ~ .govuk-hint {\n    opacity: .5;\n  }\n\n  // =========================================================\n  // Dividers ('or')\n  // =========================================================\n\n  .govuk-checkboxes__divider {\n    $govuk-divider-size: $govuk-checkboxes-size !default;\n    @include govuk-font($size: 19);\n    @include govuk-text-colour;\n    width: $govuk-divider-size;\n    margin-bottom: govuk-spacing(2);\n    text-align: center;\n  }\n\n  // =========================================================\n  // Conditional reveals\n  // =========================================================\n\n  // The narrow border is used in the conditional reveals because the border has\n  // to be an even number in order to be centred under the 40px checkbox or radio.\n  $conditional-border-width: $govuk-border-width-narrow;\n  // Calculate the amount of padding needed to keep the border centered against the checkbox.\n  $conditional-border-padding: ($govuk-checkboxes-size / 2) - ($conditional-border-width / 2);\n  // Move the border centered with the checkbox\n  $conditional-margin-left: $conditional-border-padding;\n  // Move the contents of the conditional inline with the label\n  $conditional-padding-left: $conditional-border-padding + $govuk-checkboxes-label-padding-left-right;\n\n  .govuk-checkboxes__conditional {\n    @include govuk-responsive-margin(4, \"bottom\");\n    margin-left: $conditional-margin-left;\n    padding-left: $conditional-padding-left;\n    border-left: $conditional-border-width solid $govuk-border-colour;\n\n    .js-enabled &--hidden {\n      display: none;\n    }\n\n    & > :last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  // =========================================================\n  // Small checkboxes\n  // =========================================================\n\n  .govuk-checkboxes--small {\n\n    $input-offset: ($govuk-touch-target-size - $govuk-small-checkboxes-size) / 2;\n    $label-offset: $govuk-touch-target-size - $input-offset;\n\n    .govuk-checkboxes__item {\n      @include govuk-clearfix;\n      min-height: 0;\n      margin-bottom: 0;\n      padding-left: $label-offset;\n      float: left;\n    }\n\n    // Shift the touch target into the left margin so that the visible edge of\n    // the control is aligned\n    //\n    //   ┆What colours do you like?\n    //  ┌┆───┐\n    //  │┆[] │ Purple\n    //  └┆▲──┘\n    //  ▲┆└─ Check box pseudo element, aligned with margin\n    //  └─── Touch target (invisible input), shifted into the margin\n    .govuk-checkboxes__input {\n      @include _govuk-not-ie8 {\n        left: $input-offset * -1;\n      }\n\n      @include _govuk-if-ie8 {\n        margin-left: $govuk-small-checkboxes-size * -1;\n      }\n    }\n\n    // Adjust the size and position of the label.\n    //\n    // Unlike larger checkboxes, we also have to float the label in order to\n    // 'shrink' it, preventing the hover state from kicking in across the full\n    // width of the parent element.\n    .govuk-checkboxes__label {\n      margin-top: -2px;\n      padding: 13px govuk-spacing(3) 13px 1px;\n      float: left;\n\n      @include govuk-media-query($from: tablet) {\n        padding: 11px govuk-spacing(3) 10px 1px;\n      }\n    }\n\n    // [ ] Check box\n    //\n    // Reduce the size of the check box [1], vertically center it within the\n    // touch target [2]\n    .govuk-checkboxes__label:before {\n      top: $input-offset - $govuk-border-width-form-element; // 2\n      width: $govuk-small-checkboxes-size; // 1\n      height: $govuk-small-checkboxes-size; // 1\n    }\n\n    // ✔ Check mark\n    //\n    // Reduce the size of the check mark and re-align within the checkbox\n    .govuk-checkboxes__label:after {\n      top: 15px;\n      left: 6px;\n      width: 12px;\n      height: 6.5px;\n      border-width: 0 0 3px 3px;\n    }\n\n    // Fix position of hint with small checkboxes\n    //\n    // Do not use hints with small checkboxes – because they're within the input\n    // wrapper they trigger the hover state, but clicking them doesn't actually\n    // activate the control.\n    //\n    // (If you do use them, they won't look completely broken... but seriously,\n    // don't use them)\n    .govuk-checkboxes__hint {\n      padding: 0;\n      clear: both;\n    }\n\n    // Align conditional reveals with small checkboxes\n    .govuk-checkboxes__conditional {\n      $margin-left: ($govuk-small-checkboxes-size / 2) - ($conditional-border-width / 2);\n      margin-left: $margin-left;\n      padding-left: $label-offset - ($margin-left + $conditional-border-width);\n      clear: both;\n    }\n\n    // Hover state for small checkboxes.\n    //\n    // We use a hover state for small checkboxes because the touch target size\n    // is so much larger than their visible size, and so we need to provide\n    // feedback to the user as to which checkbox they will select when their\n    // cursor is outside of the visible area.\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\n      box-shadow: 0 0 0 $govuk-hover-width $govuk-hover-colour;\n    }\n\n    // Because we've overridden the border-shadow provided by the focus state,\n    // we need to redefine that too.\n    //\n    // We use two box shadows, one that restores the original focus state [1]\n    // and another that then applies the hover state [2].\n    .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n      box-shadow:\n        0 0 0 $govuk-focus-width $govuk-focus-colour, // 1\n        0 0 0 $govuk-hover-width $govuk-hover-colour; // 2\n    }\n\n    // For devices that explicitly don't support hover, don't provide a hover\n    // state (e.g. on touch devices like iOS).\n    //\n    // We can't use `@media (hover: hover)` because we wouldn't get the hover\n    // state in browsers that don't support `@media (hover)` (like Internet\n    // Explorer) – so we have to 'undo' the hover state instead.\n    @media (hover: none), (pointer: coarse) {\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:not(:disabled) + .govuk-checkboxes__label:before {\n        box-shadow: initial;\n      }\n\n      .govuk-checkboxes__item:hover .govuk-checkboxes__input:focus + .govuk-checkboxes__label:before {\n        box-shadow: 0 0 0 $govuk-focus-width $govuk-focus-colour;\n      }\n    }\n  }\n}\n"]}