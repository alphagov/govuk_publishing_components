{"version":3,"file":"all.bundle.js","sources":["../../src/govuk/common/govuk-frontend-version.mjs","../../src/govuk/common/index.mjs","../../src/govuk/common/normalise-dataset.mjs","../../src/govuk/errors/index.mjs","../../src/govuk/govuk-frontend-component.mjs","../../src/govuk/i18n.mjs","../../src/govuk/components/accordion/accordion.mjs","../../src/govuk/components/button/button.mjs","../../src/govuk/common/closest-attribute-value.mjs","../../src/govuk/components/character-count/character-count.mjs","../../src/govuk/components/checkboxes/checkboxes.mjs","../../src/govuk/components/error-summary/error-summary.mjs","../../src/govuk/components/exit-this-page/exit-this-page.mjs","../../src/govuk/components/header/header.mjs","../../src/govuk/components/notification-banner/notification-banner.mjs","../../src/govuk/components/radios/radios.mjs","../../src/govuk/components/skip-link/skip-link.mjs","../../src/govuk/components/tabs/tabs.mjs","../../src/govuk/all.mjs"],"sourcesContent":["/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * GOV.UK Frontend release version\n *\n * {@link https://github.com/alphagov/govuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Common helpers which do not require polyfill.\n *\n * IMPORTANT: If a helper require a polyfill, please isolate it in its own module\n * so that the polyfill can be properly tree-shaken and does not burden\n * the components that do not need that helper\n */\n\n/**\n * Config flattening function\n *\n * Takes any number of objects, flattens them into namespaced key-value pairs,\n * (e.g. \\{'i18n.showSection': 'Show section'\\}) and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @internal\n * @param {...{ [key: string]: unknown }} configObjects - Config object to merge\n * @returns {{ [key: string]: unknown }} A flattened object of key-value pairs.\n */\nexport function mergeConfigs(...configObjects) {\n  /**\n   * Function to take nested objects and flatten them to a dot-separated keyed\n   * object. Doing this means we don't need to do any deep/recursive merging of\n   * each of our objects, nor transform our dataset from a flat list into a\n   * nested object.\n   *\n   * @internal\n   * @param {{ [key: string]: unknown }} configObject - Deeply nested object\n   * @returns {{ [key: string]: unknown }} Flattened object with dot-separated keys\n   */\n  function flattenObject(configObject) {\n    // Prepare an empty return object\n    /** @type {{ [key: string]: unknown }} */\n    const flattenedObject = {}\n\n    /**\n     * Our flattening function, this is called recursively for each level of\n     * depth in the object. At each level we prepend the previous level names to\n     * the key using `prefix`.\n     *\n     * @internal\n     * @param {Partial<{ [key: string]: unknown }>} obj - Object to flatten\n     * @param {string} [prefix] - Optional dot-separated prefix\n     */\n    function flattenLoop(obj, prefix) {\n      for (const [key, value] of Object.entries(obj)) {\n        const prefixedKey = prefix ? `${prefix}.${key}` : key\n\n        // If the value is a nested object, recurse over that too\n        if (value && typeof value === 'object') {\n          flattenLoop(value, prefixedKey)\n        } else {\n          // Otherwise, add this value to our return object\n          flattenedObject[prefixedKey] = value\n        }\n      }\n    }\n\n    // Kick off the recursive loop\n    flattenLoop(configObject)\n    return flattenedObject\n  }\n\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    const obj = flattenObject(configObject)\n\n    // Push their keys one-by-one into formattedConfigObject. Any duplicate\n    // keys will override the existing key with the new value.\n    for (const [key, value] of Object.entries(obj)) {\n      formattedConfigObject[key] = value\n    }\n  }\n\n  return formattedConfigObject\n}\n\n/**\n * Extracts keys starting with a particular namespace from a flattened config\n * object, removing the namespace in the process.\n *\n * @internal\n * @param {{ [key: string]: unknown }} configObject - The object to extract key-value pairs from.\n * @param {string} namespace - The namespace to filter keys with.\n * @returns {{ [key: string]: unknown }} Flattened object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(configObject, namespace) {\n  /** @type {{ [key: string]: unknown }} */\n  const newObject = {}\n\n  for (const [key, value] of Object.entries(configObject)) {\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    // Check if the first namespace matches the configured namespace\n    if (keyParts[0] === namespace) {\n      // Remove the first item (the namespace) from the parts array,\n      // but only if there is more than one part (we don't want blank keys!)\n      if (keyParts.length > 1) {\n        keyParts.shift()\n      }\n\n      // Join the remaining parts back together\n      const newKey = keyParts.join('.')\n\n      // Add them to our new object\n      newObject[newKey] = value\n    }\n  }\n\n  return newObject\n}\n\n/**\n * Get hash fragment from URL\n *\n * Extract the hash fragment (everything after the hash) from a URL,\n * but not including the hash symbol\n *\n * @private\n * @param {string} url - URL\n * @returns {string | undefined} Fragment from URL, without the hash\n */\nexport function getFragmentFromUrl(url) {\n  if (url.indexOf('#') === -1) {\n    return undefined\n  }\n\n  return url.split('#').pop()\n}\n\n/**\n * Checks if GOV.UK Frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but GOV.UK Frontend\n * won't be supported.\n *\n * @internal\n * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('govuk-frontend-supported')\n}\n\n/**\n * Validate component config by schema\n *\n * @internal\n * @param {Schema} schema - Config schema\n * @param {{ [key: string]: unknown }} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    for (const { required, errorMessage } of conditions) {\n      if (!required.every((key) => !!config[key])) {\n        errors.push(errorMessage) // Missing config key value\n      }\n    }\n\n    // Check one condition passes or add errors\n    if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n      validationErrors.push(...errors)\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * Schema for component config\n *\n * @typedef {object} Schema\n * @property {SchemaCondition[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema condition for component config\n *\n * @typedef {object} SchemaCondition\n * @property {string[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @internal\n * @param {string | undefined} value - The value to normalise\n * @returns {string | boolean | number | undefined} Normalised data\n */\nexport function normaliseString(value) {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const trimmedValue = value.trim()\n\n  if (trimmedValue === 'true') {\n    return true\n  }\n\n  if (trimmedValue === 'false') {\n    return false\n  }\n\n  // Empty / whitespace-only strings are considered finite so we need to check\n  // the length of the trimmed string as well\n  if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n    return Number(trimmedValue)\n  }\n\n  return value\n}\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using normaliseData function\n *\n * @internal\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {{ [key: string]: string | boolean | number | undefined }} Normalised dataset\n */\nexport function normaliseDataset(dataset) {\n  /** @type {ReturnType<typeof normaliseDataset>} */\n  const out = {}\n\n  for (const [key, value] of Object.entries(dataset)) {\n    out[key] = normaliseString(value)\n  }\n\n  return out\n}\n","/**\n * GOV.UK Frontend error\n *\n * A base class for `Error`s thrown by GOV.UK Frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends GOVUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @abstract\n */\nexport class GOVUKFrontendError extends Error {\n  name = 'GOVUKFrontendError'\n}\n\n/**\n * Indicates that GOV.UK Frontend is not supported\n */\nexport class SupportError extends GOVUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    super(\n      $scope\n        ? 'GOV.UK Frontend is not supported in this browser'\n        : 'GOV.UK Frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends GOVUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends GOVUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @internal\n   * @overload\n   * @param {string} message - Element error message\n   */\n\n  /**\n   * @internal\n   * @overload\n   * @param {ElementErrorOptions} options - Element error options\n   */\n\n  /**\n   * @internal\n   * @param {string | ElementErrorOptions} messageOrOptions - Element error message or options\n   */\n  constructor(messageOrOptions) {\n    let message = typeof messageOrOptions === 'string' ? messageOrOptions : ''\n\n    // Build message from options\n    if (typeof messageOrOptions === 'object') {\n      const { componentName, identifier, element, expectedType } =\n        messageOrOptions\n\n      // Add prefix and identifier\n      message = `${componentName}: ${identifier}`\n\n      // Append reason\n      message += element\n        ? ` is not of type ${expectedType || 'HTMLElement'}`\n        : ' not found'\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @internal\n * @typedef {object} ElementErrorOptions\n * @property {string} componentName - The name of the component throwing the error\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {Element | null} [element] - The element in error\n * @property {string} [expectedType] - The type that was expected for the identifier\n */\n","import { isSupported } from './common/index.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Base Component class\n *\n * Centralises the behaviours shared by our components\n *\n * @internal\n * @abstract\n */\nexport class GOVUKFrontendComponent {\n  /**\n   * Constructs a new component, validating that GOV.UK Frontend is supported\n   *\n   * @internal\n   */\n  constructor() {\n    this.checkSupport()\n  }\n\n  /**\n   * Validates whether GOV.UK Frontend is supported\n   *\n   * @private\n   */\n  checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n}\n","/**\n * Internal support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n *\n * @internal\n */\nexport class I18n {\n  translations\n  locale\n\n  /**\n   * @internal\n   * @param {{ [key: string]: unknown }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale || document.documentElement.lang || 'en'\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (options && typeof options.count === 'number') {\n      // Get the plural suffix\n      lookupKey = `${lookupKey}.${this.getPluralSuffix(\n        lookupKey,\n        options.count\n      )}`\n    }\n\n    // Fetch the translation string for that lookup key\n    const translationString = this.translations[lookupKey]\n\n    if (typeof translationString === 'string') {\n      // Check for ${} placeholders in the translation string\n      if (translationString.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translationString, options)\n      }\n\n      return translationString\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @internal\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @internal\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10â€“12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @internal\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @internal\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : this.selectPluralFormUsingFallbackRules(count)\n\n    // Use the correct plural form if provided\n    if (`${lookupKey}.${preferredForm}` in this.translations) {\n      return preferredForm\n      // Fall back to `other` if the plural form is missing, but log a warning\n      // to the console\n    } else if (`${lookupKey}.other` in this.translations) {\n      console.warn(\n        `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n      )\n\n      return 'other'\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n\n  /**\n   * Get the plural form using our fallback implementation\n   *\n   * This is split out into a separate function to make it easier to test the\n   * fallback behaviour in an environment where Intl.PluralRules exists.\n   *\n   * @internal\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The pluralisation form for count in this locale.\n   */\n  selectPluralFormUsingFallbackRules(count) {\n    // Currently our custom code can only handle positive integers, so let's\n    // make sure our number is one of those.\n    count = Math.abs(Math.floor(count))\n\n    const ruleset = this.getPluralRulesForLocale()\n\n    if (ruleset) {\n      return I18n.pluralRules[ruleset](count)\n    }\n\n    return 'other'\n  }\n\n  /**\n   * Work out which pluralisation rules to use for the current locale\n   *\n   * The locale may include a regional indicator (such as en-GB), but we don't\n   * usually care about this part, as pluralisation rules are usually the same\n   * regardless of region. There are exceptions, however, (e.g. Portuguese) so\n   * this searches by both the full and shortened locale codes, just to be sure.\n   *\n   * @internal\n   * @returns {string | undefined} The name of the pluralisation rule to use (a key for one\n   *   of the functions in this.pluralRules)\n   */\n  getPluralRulesForLocale() {\n    const localeShort = this.locale.split('-')[0]\n\n    // Look through the plural rules map to find which `pluralRule` is\n    // appropriate for our current `locale`.\n    for (const pluralRule in I18n.pluralRulesMap) {\n      for (const language of I18n.pluralRulesMap[pluralRule]) {\n        if (language === this.locale || language === localeShort) {\n          return pluralRule\n        }\n      }\n    }\n  }\n\n  /**\n   * Map of plural rules to languages where those rules apply.\n   *\n   * Note: These groups are named for the most dominant or recognisable language\n   * that uses each system. The groupings do not imply that the languages are\n   * related to one another. Many languages have evolved the same systems\n   * independently of one another.\n   *\n   * Code to support more languages can be found in the i18n spike:\n   * {@link https://github.com/alphagov/govuk-frontend/blob/spike-i18n-support/src/govuk/i18n.mjs}\n   *\n   * Languages currently supported:\n   *\n   * Arabic: Arabic (ar)\n   * Chinese: Burmese (my), Chinese (zh), Indonesian (id), Japanese (ja),\n   *   Javanese (jv), Korean (ko), Malay (ms), Thai (th), Vietnamese (vi)\n   * French: Armenian (hy), Bangla (bn), French (fr), Gujarati (gu), Hindi (hi),\n   *   Persian Farsi (fa), Punjabi (pa), Zulu (zu)\n   * German: Afrikaans (af), Albanian (sq), Azerbaijani (az), Basque (eu),\n   *   Bulgarian (bg), Catalan (ca), Danish (da), Dutch (nl), English (en),\n   *   Estonian (et), Finnish (fi), Georgian (ka), German (de), Greek (el),\n   *   Hungarian (hu), Luxembourgish (lb), Norwegian (no), Somali (so),\n   *   Swahili (sw), Swedish (sv), Tamil (ta), Telugu (te), Turkish (tr),\n   *   Urdu (ur)\n   * Irish: Irish Gaelic (ga)\n   * Russian: Russian (ru), Ukrainian (uk)\n   * Scottish: Scottish Gaelic (gd)\n   * Spanish: European Portuguese (pt-PT), Italian (it), Spanish (es)\n   * Welsh: Welsh (cy)\n   *\n   * @internal\n   * @type {{ [key: string]: string[] }}\n   */\n  static pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: [\n      'af',\n      'sq',\n      'az',\n      'eu',\n      'bg',\n      'ca',\n      'da',\n      'nl',\n      'en',\n      'et',\n      'fi',\n      'ka',\n      'de',\n      'el',\n      'hu',\n      'lb',\n      'no',\n      'so',\n      'sw',\n      'sv',\n      'ta',\n      'te',\n      'tr',\n      'ur'\n    ],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  }\n\n  /**\n   * Different pluralisation rule sets\n   *\n   * Returns the appropriate suffix for the plural form associated with `n`.\n   * Possible suffixes: 'zero', 'one', 'two', 'few', 'many', 'other' (the actual\n   * meaning of each differs per locale). 'other' should always exist, even in\n   * languages without plurals, such as Chinese.\n   * {@link https://cldr.unicode.org/index/cldr-spec/plural-rules}\n   *\n   * The count must be a positive integer. Negative numbers and decimals aren't accounted for\n   *\n   * @internal\n   * @type {{ [key: string]: (count: number) => PluralRule }}\n   */\n  static pluralRules = {\n    /* eslint-disable jsdoc/require-jsdoc */\n    arabic(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few'\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many'\n      }\n      return 'other'\n    },\n    chinese() {\n      return 'other'\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other'\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other'\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few'\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many'\n      }\n      return 'other'\n    },\n    russian(n) {\n      const lastTwo = n % 100\n      const last = lastTwo % 10\n      if (last === 1 && lastTwo !== 11) {\n        return 'one'\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few'\n      }\n      if (\n        last === 0 ||\n        (last >= 5 && last <= 9) ||\n        (lastTwo >= 11 && lastTwo <= 14)\n      ) {\n        return 'many'\n      }\n      // Note: The 'other' suffix is only used by decimal numbers in Russian.\n      // We don't anticipate it being used, but it's here for consistency.\n      return 'other'\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one'\n      }\n      if (n === 2 || n === 12) {\n        return 'two'\n      }\n      if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) {\n        return 'few'\n      }\n      return 'other'\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one'\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many'\n      }\n      return 'other'\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero'\n      }\n      if (n === 1) {\n        return 'one'\n      }\n      if (n === 2) {\n        return 'two'\n      }\n      if (n === 3) {\n        return 'few'\n      }\n      if (n === 6) {\n        return 'many'\n      }\n      return 'other'\n    }\n    /* eslint-enable jsdoc/require-jsdoc */\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @internal\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @internal\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n */\nexport class Accordion extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          componentName: 'Accordion',\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$module.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary && $summary.parentNode) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.nodeName, attr.nodeValue)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push($headingText.textContent.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push($summary.textContent.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen() {\n    const sectionsCount = this.$sections.length\n    const expandedSectionCount = this.$module.querySelectorAll(\n      `.${this.sectionExpandedClass}`\n    ).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion.\n      // Since an `#id` should be unique and an `id` is required for `aria-`\n      // attributes `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken\n        // from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId\n          ? window.sessionStorage.getItem(contentId)\n          : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result =\n        window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst KEY_SPACE = 32\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Button',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.$module.addEventListener('keydown', (event) =>\n      this.handleKeyDown(event)\n    )\n    this.$module.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.keyCode !== KEY_SPACE) {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n","/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @internal\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  extractConfigByNamespace,\n  mergeConfigs,\n  validateConfig\n} from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.govuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @preserve\n */\nexport class CharacterCount extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $textarea\n\n  /** @private */\n  $visibleCountMessage\n\n  /** @private */\n  $screenReaderCountMessage\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n\n  /** @private */\n  lastInputValue = ''\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /**\n   * @private\n   * @type {CharacterCountConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  maxLength\n\n  /**\n   * @param {Element | null} $module - HTML element to use for character count\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $textarea = $module.querySelector('.govuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.govuk-js-character-count`)'\n      })\n    }\n\n    // Read config set using dataset ('data-' values)\n    const datasetConfig = normaliseDataset($module.dataset)\n\n    // To ensure data-attributes take complete precedence, even if they change\n    // the type of count, we need to reset the `maxlength` and `maxwords` from\n    // the JavaScript config.\n    //\n    // We can't mutate `config`, though, as it may be shared across multiple\n    // components inside `initAll`.\n    /** @type {CharacterCountConfig} */\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    this.config = mergeConfigs(\n      CharacterCount.defaults,\n      config,\n      configOverrides,\n      datasetConfig\n    )\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(`Character count: ${errors[0]}`)\n    }\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'), {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue($module, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords || this.config.maxlength || Infinity\n\n    this.$module = $module\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        componentName: 'Character count',\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if ($textareaDescription.textContent.match(/^\\s*$/)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'govuk-character-count__sr-status govuk-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('govuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('govuk-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   *\n   * @private\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   *\n   * @private\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   *\n   * @private\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.updateIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   *\n   * @private\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   *\n   * @private\n   */\n  updateIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   *\n   * @private\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   *\n   * @private\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'govuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    this.$textarea.classList.toggle('govuk-textarea--error', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('govuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   *\n   * @private\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.getCountMessage()\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @private\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) || [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    } else {\n      return text.length\n    }\n  }\n\n  /**\n   * Get count message\n   *\n   * @private\n   * @returns {string} Status message\n   */\n  getCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @private\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @private\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema}\n   */\n  static schema = Object.freeze({\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a [pluralised list of\n *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @typedef {import('../../common/index.mjs').Schema} Schema\n * @typedef {import('../../i18n.mjs').TranslationPluralForms} TranslationPluralForms\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Checkboxes component\n *\n * @preserve\n */\nexport class Checkboxes extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Checkboxes can be associated with a 'conditionally revealed' content block\n   * â€“ for example, a checkbox for 'Phone' could reveal an additional form field\n   * for the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the checkbox state.\n   *\n   * @param {Element | null} $module - HTML element to use for checkboxes\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Checkboxes',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $inputs = $module.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        componentName: 'Checkboxes',\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          componentName: 'Checkboxes',\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if (\n      $target &&\n      $target.classList.contains('govuk-checkboxes__conditional')\n    ) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-checkboxes__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the same name value, and uncheck them.\n   * This is useful for when a â€œNone of these\" checkbox is checked.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"][name=\"${$input.name}\"]`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        $inputWithSameName.checked = false\n        this.syncConditionalRevealWithInputState($inputWithSameName)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive checkboxes\n   *\n   * Find any checkbox inputs with the same name value and the 'exclusive'\n   * behaviour, and uncheck them. This helps prevent someone checking both a\n   * regular checkbox and a \"None of these\" checkbox in the same fieldset.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n      if (hasSameFormOwner) {\n        $exclusiveInput.checked = false\n        this.syncConditionalRevealWithInputState($exclusiveInput)\n      }\n    })\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a checkbox,\n   * sync the state of any associated conditional reveal with the checkbox\n   * state.\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    const hasBehaviourExclusive =\n      $clickedInput.getAttribute('data-behaviour') === 'exclusive'\n    if (hasBehaviourExclusive) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-checkboxes'\n}\n","import { getFragmentFromUrl, mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Error summary component\n *\n * Takes focus on initialisation for accessible announcement, unless disabled in\n * configuration.\n *\n * @preserve\n */\nexport class ErrorSummary extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ErrorSummaryConfig}\n   */\n  config\n\n  /**\n   * @param {Element | null} $module - HTML element to use for error summary\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Error summary',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      ErrorSummary.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Focus the error summary\n   *\n   * @private\n   */\n  setFocus() {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    // Set tabindex to -1 to make the element programmatically focusable, but\n    // remove it on blur as the error summary doesn't need to be focused again.\n    this.$module.setAttribute('tabindex', '-1')\n\n    this.$module.addEventListener('blur', () => {\n      this.$module.removeAttribute('tabindex')\n    })\n\n    this.$module.focus()\n  }\n\n  /**\n   * Click event handler\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @private\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = getFragmentFromUrl($target.href)\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @private\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldsetâ€™s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ||\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Error summary config\n *\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n","import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Exit this page component\n *\n * @preserve\n */\nexport class ExitThisPage extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ExitThisPageConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  $button\n\n  /**\n   * @private\n   * @type {HTMLAnchorElement | null}\n   */\n  $skiplinkButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $updateSpan = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $indicatorContainer = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $overlay = null\n\n  /** @private */\n  keypressCounter = 0\n\n  /** @private */\n  lastKeyWasModified = false\n\n  /** @private */\n  timeoutTime = 5000 // milliseconds\n\n  // Store the timeout events so that we can clear them to avoid user keypresses overlapping\n  // setTimeout returns an id that we can use to clear it with clearTimeout,\n  // hence the 'Id' suffix\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  keypressTimeoutId = null\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  timeoutMessageId = null\n\n  /**\n   * @param {Element | null} $module - HTML element that wraps the Exit This Page button\n   * @param {ExitThisPageConfig} [config] - Exit This Page config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Exit this page',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $button = $module.querySelector('.govuk-exit-this-page__button')\n    if (!($button instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        componentName: 'Exit this page',\n        element: $button,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Button (`.govuk-exit-this-page__button`)'\n      })\n    }\n\n    this.config = mergeConfigs(\n      ExitThisPage.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n    this.$module = $module\n    this.$button = $button\n\n    const $skiplinkButton = document.querySelector(\n      '.govuk-js-exit-this-page-skiplink'\n    )\n    if ($skiplinkButton instanceof HTMLAnchorElement) {\n      this.$skiplinkButton = $skiplinkButton\n    }\n\n    this.buildIndicator()\n    this.initUpdateSpan()\n    this.initButtonClickHandler()\n\n    // Check to see if this has already been done by a previous initialisation of ExitThisPage\n    if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n      document.addEventListener('keyup', this.handleKeypress.bind(this), true)\n      document.body.dataset.govukFrontendExitThisPageKeypress = 'true'\n    }\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // blank overlay remains present, rendering the page unusable. Here, we check\n    // to see if it's present on page (re)load, and remove it if so.\n    window.addEventListener('pageshow', this.resetPage.bind(this))\n  }\n\n  /**\n   * Create the <span> we use for screen reader announcements.\n   *\n   * @private\n   */\n  initUpdateSpan() {\n    this.$updateSpan = document.createElement('span')\n    this.$updateSpan.setAttribute('role', 'status')\n    this.$updateSpan.className = 'govuk-visually-hidden'\n\n    this.$module.appendChild(this.$updateSpan)\n  }\n\n  /**\n   * Create button click handlers.\n   *\n   * @private\n   */\n  initButtonClickHandler() {\n    // Main EtP button\n    this.$button.addEventListener('click', this.handleClick.bind(this))\n\n    // EtP secondary link\n    if (this.$skiplinkButton) {\n      this.$skiplinkButton.addEventListener(\n        'click',\n        this.handleClick.bind(this)\n      )\n    }\n  }\n\n  /**\n   * Create the HTML for the 'three lights' indicator on the button.\n   *\n   * @private\n   */\n  buildIndicator() {\n    // Build container\n    // Putting `aria-hidden` on it as it won't contain any readable information\n    this.$indicatorContainer = document.createElement('div')\n    this.$indicatorContainer.className = 'govuk-exit-this-page__indicator'\n    this.$indicatorContainer.setAttribute('aria-hidden', 'true')\n\n    // Create three 'lights' and place them within the container\n    for (let i = 0; i < 3; i++) {\n      const $indicator = document.createElement('div')\n      $indicator.className = 'govuk-exit-this-page__indicator-light'\n      this.$indicatorContainer.appendChild($indicator)\n    }\n\n    // Append it all to the module\n    this.$button.appendChild(this.$indicatorContainer)\n  }\n\n  /**\n   * Update whether the lights are visible and which ones are lit up depending on\n   * the value of `keypressCounter`.\n   *\n   * @private\n   */\n  updateIndicator() {\n    if (!this.$indicatorContainer) {\n      return\n    }\n\n    // Show or hide the indicator container depending on keypressCounter value\n    this.$indicatorContainer.classList.toggle(\n      'govuk-exit-this-page__indicator--visible',\n      this.keypressCounter > 0\n    )\n\n    // Turn on only the indicators we want on\n    const $indicators = this.$indicatorContainer.querySelectorAll(\n      '.govuk-exit-this-page__indicator-light'\n    )\n    $indicators.forEach(($indicator, index) => {\n      $indicator.classList.toggle(\n        'govuk-exit-this-page__indicator-light--on',\n        index < this.keypressCounter\n      )\n    })\n  }\n\n  /**\n   * Initiates the redirection away from the current page.\n   * Includes the loading overlay functionality, which covers the current page with a\n   * white overlay so that the contents are not visible during the loading\n   * process. This is particularly important on slow network connections.\n   *\n   * @private\n   */\n  exitPage() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    this.$updateSpan.textContent = ''\n\n    // Blank the page\n    // As well as creating an overlay with text, we also set the body to hidden\n    // to prevent screen reader and sequential navigation users potentially\n    // navigating through the page behind the overlay during loading\n    document.body.classList.add('govuk-exit-this-page-hide-content')\n    this.$overlay = document.createElement('div')\n    this.$overlay.className = 'govuk-exit-this-page-overlay'\n    this.$overlay.setAttribute('role', 'alert')\n\n    // we do these this way round, thus incurring a second paint, because changing\n    // the element text after adding it means that screen readers pick up the\n    // announcement more reliably.\n    document.body.appendChild(this.$overlay)\n    this.$overlay.textContent = this.i18n.t('activated')\n\n    window.location.href = this.$button.href\n  }\n\n  /**\n   * Pre-activation logic for when the button is clicked/activated via mouse or\n   * pointer.\n   *\n   * We do this to differentiate it from the keyboard activation event because we\n   * need to run `e.preventDefault` as the button or skiplink are both links and we\n   * want to apply some additional logic in `exitPage` before navigating.\n   *\n   * @private\n   * @param {MouseEvent} event - mouse click event\n   */\n  handleClick(event) {\n    event.preventDefault()\n    this.exitPage()\n  }\n\n  /**\n   * Logic for the 'quick escape' keyboard sequence functionality (pressing the\n   * Shift key three times without interruption, within a time limit).\n   *\n   * @private\n   * @param {KeyboardEvent} event - keyup event\n   */\n  handleKeypress(event) {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    // Detect if the 'Shift' key has been pressed. We want to only do things if it\n    // was pressed by itself and not in a combination with another keyâ€”so we keep\n    // track of whether the preceding keyup had shiftKey: true on it, and if it\n    // did, we ignore the next Shift keyup event.\n    //\n    // This works because using Shift as a modifier key (e.g. pressing Shift + A)\n    // will fire TWO keyup events, one for A (with e.shiftKey: true) and the other\n    // for Shift (with e.shiftKey: false).\n    if (\n      (event.key === 'Shift' || event.keyCode === 16 || event.which === 16) &&\n      !this.lastKeyWasModified\n    ) {\n      this.keypressCounter += 1\n\n      // Update the indicator before the below if statement can reset it back to 0\n      this.updateIndicator()\n\n      // Clear the timeout for the keypress timeout message clearing itself\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId)\n        this.timeoutMessageId = null\n      }\n\n      if (this.keypressCounter >= 3) {\n        this.keypressCounter = 0\n\n        if (this.keypressTimeoutId) {\n          window.clearTimeout(this.keypressTimeoutId)\n          this.keypressTimeoutId = null\n        }\n\n        this.exitPage()\n      } else {\n        if (this.keypressCounter === 1) {\n          this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes')\n        } else {\n          this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime')\n        }\n      }\n\n      this.setKeypressTimer()\n    } else if (this.keypressTimeoutId) {\n      // If the user pressed any key other than 'Shift', after having pressed\n      // 'Shift' and activating the timer, stop and reset the timer.\n      this.resetKeypressTimer()\n    }\n\n    // Keep track of whether the Shift modifier key was held during this keypress\n    this.lastKeyWasModified = event.shiftKey\n  }\n\n  /**\n   * Starts the 'quick escape' keyboard sequence timer.\n   *\n   * This can be invoked several times. We want this to be possible so that the\n   * timer is restarted each time the shortcut key is pressed (e.g. the user has\n   * up to n seconds between each keypress, rather than n seconds to invoke the\n   * entire sequence.)\n   *\n   * @private\n   */\n  setKeypressTimer() {\n    // Clear any existing timeout. This is so only one timer is running even if\n    // there are multiple keypresses in quick succession.\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    // Set a fresh timeout\n    this.keypressTimeoutId = window.setTimeout(\n      this.resetKeypressTimer.bind(this),\n      this.timeoutTime\n    )\n  }\n\n  /**\n   * Stops and resets the 'quick escape' keyboard sequence timer.\n   *\n   * @private\n   */\n  resetKeypressTimer() {\n    if (!this.$updateSpan) {\n      return\n    }\n\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n      this.keypressTimeoutId = null\n    }\n\n    const $updateSpan = this.$updateSpan\n\n    this.keypressCounter = 0\n    $updateSpan.textContent = this.i18n.t('timedOut')\n\n    this.timeoutMessageId = window.setTimeout(() => {\n      $updateSpan.textContent = ''\n    }, this.timeoutTime)\n\n    this.updateIndicator()\n  }\n\n  /**\n   * Reset the page using the EtP button\n   *\n   * We use this in situations where a user may re-enter a page using the browser\n   * back button. In these cases, the browser can choose to restore the state of\n   * the page as it was previously, including restoring the 'ghost page' overlay,\n   * the announcement span having it's role set to \"alert\" and the keypress\n   * indicator still active, leaving the page in an unusable state.\n   *\n   * By running this check when the page is shown, we can programatically restore\n   * the page and the component to a \"default\" state\n   *\n   * @private\n   */\n  resetPage() {\n    // If an overlay is set, remove it and reset the value\n    document.body.classList.remove('govuk-exit-this-page-hide-content')\n\n    if (this.$overlay) {\n      this.$overlay.remove()\n      this.$overlay = null\n    }\n\n    // Ensure the announcement span's role is status, not alert and clear any text\n    if (this.$updateSpan) {\n      this.$updateSpan.setAttribute('role', 'status')\n      this.$updateSpan.textContent = ''\n    }\n\n    // Sync the keypress indicator lights\n    this.updateIndicator()\n\n    // If the timeouts are active, clear them\n    if (this.keypressTimeoutId) {\n      window.clearTimeout(this.keypressTimeoutId)\n    }\n\n    if (this.timeoutMessageId) {\n      window.clearTimeout(this.timeoutMessageId)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-exit-this-page'\n\n  /**\n   * Exit this page default config\n   *\n   * @see {@link ExitThisPageConfig}\n   * @constant\n   * @type {ExitThisPageConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  })\n}\n\n/**\n * Exit this Page config\n *\n * @see {@link ExitThisPage.defaults}\n * @typedef {object} ExitThisPageConfig\n * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n */\n\n/**\n * Exit this Page translations\n *\n * @see {@link ExitThisPage.defaults.i18n}\n * @typedef {object} ExitThisPageTranslations\n *\n * Messages used by the component programatically inserted text, including\n * overlay text and screen reader announcements.\n * @property {string} [activated] - Screen reader announcement for when EtP\n *   keypress functionality has been successfully activated.\n * @property {string} [timedOut] - Screen reader announcement for when the EtP\n *   keypress functionality has timed out.\n * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n *   the user they must press the activation key two more times.\n * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n *   the user they must press the activation key one more time.\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Header component\n *\n * @preserve\n */\nexport class Header extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $menuButton\n\n  /** @private */\n  $menu\n\n  /**\n   * Save the opened/closed state for the nav in memory so that we can\n   * accurately maintain state when the screen is changed from small to big and\n   * back to small\n   *\n   * @private\n   */\n  menuIsOpen = false\n\n  /**\n   * A global const for storing a matchMedia instance which we'll use to detect\n   * when a screen size change happens. We rely on it being null if the feature\n   * isn't available to initially apply hidden attributes\n   *\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * Apply a matchMedia for desktop which will trigger a state sync if the\n   * browser viewport moves between states.\n   *\n   * @param {Element | null} $module - HTML element to use for header\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Header',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n    const $menuButton = $module.querySelector('.govuk-js-header-toggle')\n\n    // Headers don't necessarily have a navigation. When they don't, the menu\n    // toggle won't be rendered by our macro (or may be omitted when writing\n    // plain HTML)\n    if (!$menuButton) {\n      return this\n    }\n\n    const menuId = $menuButton.getAttribute('aria-controls')\n    if (!menuId) {\n      throw new ElementError({\n        componentName: 'Header',\n        identifier:\n          'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n      })\n    }\n\n    const $menu = document.getElementById(menuId)\n    if (!$menu) {\n      throw new ElementError({\n        componentName: 'Header',\n        element: $menu,\n        identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n      })\n    }\n\n    this.$menu = $menu\n    this.$menuButton = $menuButton\n\n    // Set the matchMedia to the govuk-frontend desktop breakpoint\n    this.mql = window.matchMedia('(min-width: 48.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.syncState())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.syncState())\n    }\n\n    this.syncState()\n    this.$menuButton.addEventListener('click', () =>\n      this.handleMenuButtonClick()\n    )\n  }\n\n  /**\n   * Sync menu state\n   *\n   * Uses the global variable menuIsOpen to correctly set the accessible and\n   * visual states of the menu and the menu button.\n   * Additionally will force the menu to be visible and the menu button to be\n   * hidden if the matchMedia is triggered to desktop.\n   *\n   * @private\n   */\n  syncState() {\n    if (!this.mql || !this.$menu || !this.$menuButton) {\n      return\n    }\n\n    if (this.mql.matches) {\n      this.$menu.removeAttribute('hidden')\n      this.$menuButton.setAttribute('hidden', '')\n    } else {\n      this.$menuButton.removeAttribute('hidden')\n      this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString())\n\n      if (this.menuIsOpen) {\n        this.$menu.removeAttribute('hidden')\n      } else {\n        this.$menu.setAttribute('hidden', '')\n      }\n    }\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * When the menu button is clicked, change the visibility of the menu and then\n   * sync the accessibility state and menu button state\n   *\n   * @private\n   */\n  handleMenuButtonClick() {\n    this.menuIsOpen = !this.menuIsOpen\n    this.syncState()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-header'\n}\n","import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Notification Banner component\n *\n * @preserve\n */\nexport class NotificationBanner extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {NotificationBannerConfig}\n   */\n  config\n\n  /**\n   * @param {Element | null} $module - HTML element to use for notification banner\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Notification banner',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      NotificationBanner.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.setFocus()\n  }\n\n  /**\n   * Focus the element\n   *\n   * If `role=\"alert\"` is set, focus the element to help some assistive\n   * technologies prioritise announcing it.\n   *\n   * You can turn off the auto-focus functionality by setting\n   * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n   * do this based on user research findings, or to avoid a clash with another\n   * element which should be focused when the page loads.\n   *\n   * @private\n   */\n  setFocus() {\n    if (this.config.disableAutoFocus) {\n      return\n    }\n\n    if (this.$module.getAttribute('role') !== 'alert') {\n      return\n    }\n\n    // Set tabindex to -1 to make the element focusable with JavaScript. Remove\n    // the tabindex on blur as the component doesn't need to be focusable after\n    // the page has loaded.\n    if (!this.$module.getAttribute('tabindex')) {\n      this.$module.setAttribute('tabindex', '-1')\n\n      this.$module.addEventListener('blur', () => {\n        this.$module.removeAttribute('tabindex')\n      })\n    }\n\n    this.$module.focus()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` â€“ in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n","import { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Radios component\n *\n * @preserve\n */\nexport class Radios extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $inputs\n\n  /**\n   * Radios can be associated with a 'conditionally revealed' content block â€“\n   * for example, a radio for 'Phone' could reveal an additional form field for\n   * the user to enter their phone number.\n   *\n   * These associations are made using a `data-aria-controls` attribute, which\n   * is promoted to an aria-controls attribute during initialisation.\n   *\n   * We also need to restore the state of any conditional reveals on the page\n   * (for example if the user has navigated back), and set up event handlers to\n   * keep the reveal in sync with the radio state.\n   *\n   * @param {Element | null} $module - HTML element to use for radios\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Radios',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $inputs = $module.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        componentName: 'Radios',\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('data-aria-controls')\n\n      // Skip radios without data-aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          componentName: 'Radios',\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n\n      // Promote the data-aria-controls attribute to a aria-controls attribute\n      // so that the relationship is exposed in the AOM\n      $input.setAttribute('aria-controls', targetId)\n      $input.removeAttribute('data-aria-controls')\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$module.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this $module.\n   *\n   * @private\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @private\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    const targetId = $input.getAttribute('aria-controls')\n    if (!targetId) {\n      return\n    }\n\n    const $target = document.getElementById(targetId)\n    if ($target && $target.classList.contains('govuk-radios__conditional')) {\n      const inputIsChecked = $input.checked\n\n      $input.setAttribute('aria-expanded', inputIsChecked.toString())\n      $target.classList.toggle(\n        'govuk-radios__conditional--hidden',\n        !inputIsChecked\n      )\n    }\n  }\n\n  /**\n   * Click event handler\n   *\n   * Handle a click within the $module â€“ if the click occurred on a radio, sync\n   * the state of the conditional reveal for all radio buttons in the same form\n   * with the same name (because checking one radio could have un-checked a\n   * radio in another $module)\n   *\n   * @private\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-radios'\n}\n","import { getFragmentFromUrl } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Skip link component\n *\n * @preserve\n */\nexport class SkipLink extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $linkedElement\n\n  /** @private */\n  linkedElementListener = false\n\n  /**\n   * @param {Element | null} $module - HTML element to use for skip link\n   * @throws {ElementError} when $module is not set or the wrong type\n   * @throws {ElementError} when $module.hash does not contain a hash\n   * @throws {ElementError} when the linked element is missing or the wrong type\n   */\n  constructor($module) {\n    super()\n\n    if (!($module instanceof HTMLAnchorElement)) {\n      throw new ElementError({\n        componentName: 'Skip link',\n        element: $module,\n        expectedType: 'HTMLAnchorElement',\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n    this.$linkedElement = this.getLinkedElement()\n\n    this.$module.addEventListener('click', () => this.focusLinkedElement())\n  }\n\n  /**\n   * Get linked element\n   *\n   * @private\n   * @returns {HTMLElement} $linkedElement - Target of the skip link\n   */\n  getLinkedElement() {\n    const linkedElementId = getFragmentFromUrl(this.$module.hash)\n\n    // Check for link hash fragment\n    if (!linkedElementId) {\n      throw new ElementError(\n        'Skip link: Root element (`$module`) attribute (`href`) has no URL fragment'\n      )\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for link target element\n    if (!$linkedElement) {\n      throw new ElementError({\n        componentName: 'Skip link',\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    return $linkedElement\n  }\n\n  /**\n   * Focus the linked element\n   *\n   * Set tabindex and helper CSS class. Set listener to remove them on blur.\n   *\n   * @private\n   */\n  focusLinkedElement() {\n    if (!this.$linkedElement.getAttribute('tabindex')) {\n      // Set the element tabindex to -1 so it can be focused with JavaScript.\n      this.$linkedElement.setAttribute('tabindex', '-1')\n      this.$linkedElement.classList.add('govuk-skip-link-focused-element')\n\n      // Add listener for blur on the focused element (unless the listener has\n      // previously been added)\n      if (!this.linkedElementListener) {\n        this.$linkedElement.addEventListener('blur', () =>\n          this.removeFocusProperties()\n        )\n        this.linkedElementListener = true\n      }\n    }\n\n    this.$linkedElement.focus()\n  }\n\n  /**\n   * Remove the tabindex that makes the linked element focusable because the\n   * element only needs to be focusable until it has received programmatic focus\n   * and a screen reader has announced it.\n   *\n   * Remove the CSS class that removes the native focus styles.\n   *\n   * @private\n   */\n  removeFocusProperties() {\n    this.$linkedElement.removeAttribute('tabindex')\n    this.$linkedElement.classList.remove('govuk-skip-link-focused-element')\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-skip-link'\n}\n","import { getFragmentFromUrl } from '../../common/index.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\n/**\n * Tabs component\n *\n * @preserve\n */\nexport class Tabs extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /** @private */\n  $tabs\n\n  /** @private */\n  $tabList\n\n  /** @private */\n  $tabListItems\n\n  /** @private */\n  keys = { left: 37, right: 39, up: 38, down: 40 }\n\n  /** @private */\n  jsHiddenClass = 'govuk-tabs__panel--hidden'\n\n  /** @private */\n  changingHash = false\n\n  /** @private */\n  boundTabClick\n\n  /** @private */\n  boundTabKeydown\n\n  /** @private */\n  boundOnHashChange\n\n  /**\n   * @private\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for tabs\n   */\n  constructor($module) {\n    super()\n\n    if (!$module) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    const $tabs = $module.querySelectorAll('a.govuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$module = $module\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$module.querySelector('.govuk-tabs__list')\n    const $tabListItems = this.$module.querySelectorAll(\n      'li.govuk-tabs__list-item'\n    )\n\n    if (!$tabList) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        componentName: 'Tabs',\n        identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   *\n   * @private\n   */\n  setupResponsiveChecks() {\n    this.mql = window.matchMedia('(min-width: 40.0625em)')\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => {\n        this.checkMode()\n      })\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => {\n        this.checkMode()\n      })\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   *\n   * @private\n   */\n  checkMode() {\n    if (this.mql && this.mql.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   *\n   * @private\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) || this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   *\n   * @private\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   *\n   * @private\n   * @returns {void | undefined} Returns void, or undefined when prevented\n   */\n  onHashChange() {\n    const hash = window.location.hash\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @private\n   * @param {string} hash - Hash fragment including #\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getTab(hash) {\n    return this.$module.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return\n    }\n\n    // Set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // Set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {void} Returns void\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $nextTab = event.currentTarget\n\n    if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id so the page doesn't jump when a user clicks a tab\n    // (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right/down arrow for next tab\n   * - Press left/up arrow for previous tab\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.keyCode) {\n      case this.keys.left:\n      case this.keys.up:\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case this.keys.right:\n      case this.keys.down:\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   *\n   * @private\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   *\n   * @private\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab || !$currentTab.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   * @returns {Element | null} Tab panel\n   */\n  getPanel($tab) {\n    const panelId = getFragmentFromUrl($tab.href)\n    if (!panelId) {\n      return null\n    }\n\n    return this.$module.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @private\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('govuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   *\n   * @private\n   * @returns {HTMLAnchorElement | null} Tab link\n   */\n  getCurrentTab() {\n    return this.$module.querySelector(\n      '.govuk-tabs__list-item--selected a.govuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-tabs'\n}\n","/* eslint-disable no-new */\n\nimport { version } from './common/govuk-frontend-version.mjs'\nimport { isSupported } from './common/index.mjs'\nimport { Accordion } from './components/accordion/accordion.mjs'\nimport { Button } from './components/button/button.mjs'\nimport { CharacterCount } from './components/character-count/character-count.mjs'\nimport { Checkboxes } from './components/checkboxes/checkboxes.mjs'\nimport { ErrorSummary } from './components/error-summary/error-summary.mjs'\nimport { ExitThisPage } from './components/exit-this-page/exit-this-page.mjs'\nimport { Header } from './components/header/header.mjs'\nimport { NotificationBanner } from './components/notification-banner/notification-banner.mjs'\nimport { Radios } from './components/radios/radios.mjs'\nimport { SkipLink } from './components/skip-link/skip-link.mjs'\nimport { Tabs } from './components/tabs/tabs.mjs'\nimport { SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find, instantiate and init all of the\n * components provided as part of GOV.UK Frontend.\n *\n * @param {Config & { scope?: Element }} [config] - Config for all components (with optional scope)\n */\nfunction initAll(config) {\n  config = typeof config !== 'undefined' ? config : {}\n\n  // Skip initialisation when GOV.UK Frontend is not supported\n  if (!isSupported()) {\n    console.log(new SupportError())\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Accordion, config.accordion],\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [ExitThisPage, config.exitThisPage],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [Radios],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  // Allow the user to initialise GOV.UK Frontend in only certain sections of the page\n  // Defaults to the entire document if nothing is set.\n  const $scope = config.scope || document\n\n  components.forEach(([Component, config]) => {\n    const $elements = $scope.querySelectorAll(\n      `[data-module=\"${Component.moduleName}\"]`\n    )\n\n    $elements.forEach(($element) => {\n      try {\n        // Only pass config to components that accept it\n        'defaults' in Component\n          ? new Component($element, config)\n          : new Component($element)\n      } catch (error) {\n        console.log(error)\n      }\n    })\n  })\n}\n\nexport {\n  initAll,\n  version,\n\n  // Components\n  Accordion,\n  Button,\n  CharacterCount,\n  Checkboxes,\n  ErrorSummary,\n  ExitThisPage,\n  Header,\n  NotificationBanner,\n  Radios,\n  SkipLink,\n  Tabs\n}\n\n/**\n * Config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {AccordionConfig} [accordion] - Accordion config\n * @property {ButtonConfig} [button] - Button config\n * @property {CharacterCountConfig} [characterCount] - Character Count config\n * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n */\n\n/**\n * Config for individual components\n *\n * @typedef {import('./components/accordion/accordion.mjs').AccordionConfig} AccordionConfig\n * @typedef {import('./components/accordion/accordion.mjs').AccordionTranslations} AccordionTranslations\n * @typedef {import('./components/button/button.mjs').ButtonConfig} ButtonConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountConfig} CharacterCountConfig\n * @typedef {import('./components/character-count/character-count.mjs').CharacterCountTranslations} CharacterCountTranslations\n * @typedef {import('./components/error-summary/error-summary.mjs').ErrorSummaryConfig} ErrorSummaryConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageConfig} ExitThisPageConfig\n * @typedef {import('./components/exit-this-page/exit-this-page.mjs').ExitThisPageTranslations} ExitThisPageTranslations\n * @typedef {import('./components/notification-banner/notification-banner.mjs').NotificationBannerConfig} NotificationBannerConfig\n */\n\n/**\n * Component config keys, e.g. `accordion` and `characterCount`\n *\n * @typedef {keyof Config} ConfigKey\n */\n"],"names":["version","mergeConfigs","configObjects","flattenObject","configObject","flattenedObject","flattenLoop","obj","prefix","key","value","Object","entries","prefixedKey","formattedConfigObject","extractConfigByNamespace","namespace","newObject","keyParts","split","length","shift","newKey","join","getFragmentFromUrl","url","indexOf","undefined","pop","isSupported","$scope","document","body","classList","contains","validateConfig","schema","config","validationErrors","name","conditions","errors","required","errorMessage","every","push","normaliseString","trimmedValue","trim","isFinite","Number","normaliseDataset","dataset","out","GOVUKFrontendError","Error","constructor","args","SupportError","ConfigError","ElementError","messageOrOptions","message","componentName","identifier","element","expectedType","GOVUKFrontendComponent","checkSupport","I18n","translations","locale","documentElement","lang","t","lookupKey","options","count","getPluralSuffix","translationString","match","replacePlaceholders","formatter","Intl","NumberFormat","supportedLocalesOf","replace","placeholderWithBraces","placeholderKey","prototype","hasOwnProperty","call","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","window","PluralRules","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","language","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","n","lastTwo","last","Accordion","$module","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","HTMLElement","defaults","querySelectorAll","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","createElement","setAttribute","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","i","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attr","Array","from","attributes","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","parentNode","$summarySpan","$summarySpanFocus","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","textContent","ariaLabelParts","ariaLabelMessage","removeAttribute","remove","sectionsCount","expandedSectionCount","toString","toggle","rememberExpanded","contentId","getAttribute","contentState","sessionStorage","setItem","getItem","$punctuationEl","moduleName","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception","KEY_SPACE","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","keyCode","preventDefault","click","preventDoubleClick","setTimeout","closestAttributeValue","$element","attributeName","$closestElementWithAttribute","CharacterCount","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","HTMLTextAreaElement","HTMLInputElement","datasetConfig","configOverrides","maxlength","maxwords","Infinity","textareaDescriptionId","$textareaDescription","getElementById","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","remainingNumber","isError","isOverThreshold","getCountMessage","text","tokens","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","thresholdValue","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","unCheckAllInputsExcept","allInputsWithSameName","$inputWithSameName","hasSameFormOwner","form","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","type","hasAriaControls","hasBehaviourExclusive","ErrorSummary","setFocus","disableAutoFocus","focus","focusTarget","HTMLAnchorElement","inputId","href","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","$indicators","exitPage","location","which","clearTimeout","setKeypressTimer","resetKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","Header","$menuButton","$menu","menuIsOpen","mql","menuId","matchMedia","syncState","addListener","handleMenuButtonClick","matches","NotificationBanner","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","SkipLink","$linkedElement","linkedElementListener","getLinkedElement","focusLinkedElement","linkedElementId","hash","removeFocusProperties","Tabs","$tabs","$tabList","$tabListItems","keys","left","right","up","down","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","setupResponsiveChecks","checkMode","setup","teardown","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","initAll","log","components","accordion","button","characterCount","errorSummary","exitThisPage","notificationBanner","scope","Component","$elements","error"],"mappings":"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"}