{"version":3,"file":"accordion.mjs","sources":["../../../../src/govuk/components/accordion/accordion.mjs"],"sourcesContent":["import { mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @preserve\n */\nexport class Accordion extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {AccordionConfig}\n   */\n  config\n\n  /** @private */\n  i18n\n\n  /** @private */\n  controlsClass = 'govuk-accordion__controls'\n\n  /** @private */\n  showAllClass = 'govuk-accordion__show-all'\n\n  /** @private */\n  showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @private */\n  sectionClass = 'govuk-accordion__section'\n\n  /** @private */\n  sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @private */\n  sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @private */\n  sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @private */\n  sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @private */\n  sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @private */\n  sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @private */\n  sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @private */\n  sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @private */\n  sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @private */\n  sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @private */\n  upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @private */\n  downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @private */\n  sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @private */\n  sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @private */\n  sectionContentClass = 'govuk-accordion__section-content'\n\n  /** @private */\n  $sections\n\n  /** @private */\n  browserSupportsSessionStorage = false\n\n  /**\n   * @private\n   * @type {HTMLButtonElement | null}\n   */\n  $showAllButton = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllIcon = null\n\n  /**\n   * @private\n   * @type {HTMLElement | null}\n   */\n  $showAllText = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for accordion\n   * @param {AccordionConfig} [config] - Accordion config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Accordion.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n    const $sections = this.$module.querySelectorAll(`.${this.sectionClass}`)\n    if (!$sections.length) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n      })\n    }\n\n    this.$sections = $sections\n    this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n    this.initControls()\n    this.initSectionHeaders()\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Initialise controls and set attributes\n   *\n   * @private\n   */\n  initControls() {\n    // Create \"Show all\" button and set attributes\n    this.$showAllButton = document.createElement('button')\n    this.$showAllButton.setAttribute('type', 'button')\n    this.$showAllButton.setAttribute('class', this.showAllClass)\n    this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n    // Create icon, add to element\n    this.$showAllIcon = document.createElement('span')\n    this.$showAllIcon.classList.add(this.upChevronIconClass)\n    this.$showAllButton.appendChild(this.$showAllIcon)\n\n    // Create control wrapper and add controls to it\n    const $accordionControls = document.createElement('div')\n    $accordionControls.setAttribute('class', this.controlsClass)\n    $accordionControls.appendChild(this.$showAllButton)\n    this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n    // Build additional wrapper for Show all toggle text and place after icon\n    this.$showAllText = document.createElement('span')\n    this.$showAllText.classList.add(this.showAllTextClass)\n    this.$showAllButton.appendChild(this.$showAllText)\n\n    // Handle click events on the show/hide all button\n    this.$showAllButton.addEventListener('click', () =>\n      this.onShowOrHideAllToggle()\n    )\n\n    // Handle 'beforematch' events, if the user agent supports them\n    if ('onbeforematch' in document) {\n      document.addEventListener('beforematch', (event) =>\n        this.onBeforeMatch(event)\n      )\n    }\n  }\n\n  /**\n   * Initialise section headers\n   *\n   * @private\n   */\n  initSectionHeaders() {\n    this.$sections.forEach(($section, i) => {\n      const $header = $section.querySelector(`.${this.sectionHeaderClass}`)\n      if (!$header) {\n        throw new ElementError({\n          componentName: 'Accordion',\n          identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n        })\n      }\n\n      // Set header attributes\n      this.constructHeaderMarkup($header, i)\n      this.setExpanded(this.isExpanded($section), $section)\n\n      // Handle events\n      $header.addEventListener('click', () => this.onSectionToggle($section))\n\n      // See if there is any state stored in sessionStorage and set the sections\n      // to open or closed.\n      this.setInitialState($section)\n    })\n  }\n\n  /**\n   * Construct section header\n   *\n   * @private\n   * @param {Element} $header - Section header\n   * @param {number} index - Section index\n   */\n  constructHeaderMarkup($header, index) {\n    const $span = $header.querySelector(`.${this.sectionButtonClass}`)\n    const $heading = $header.querySelector(`.${this.sectionHeadingClass}`)\n    const $summary = $header.querySelector(`.${this.sectionSummaryClass}`)\n\n    if (!$heading) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n      })\n    }\n\n    if (!$span) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n      })\n    }\n\n    // Create a button element that will replace the\n    // '.govuk-accordion__section-button' span\n    const $button = document.createElement('button')\n    $button.setAttribute('type', 'button')\n    $button.setAttribute(\n      'aria-controls',\n      `${this.$module.id}-content-${index + 1}`\n    )\n\n    // Copy all attributes from $span to $button (except `id`, which gets added\n    // to the `$headingText` element)\n    for (const attr of Array.from($span.attributes)) {\n      if (attr.nodeName !== 'id') {\n        $button.setAttribute(attr.nodeName, `${attr.nodeValue}`)\n      }\n    }\n\n    // Create container for heading text so it can be styled\n    const $headingText = document.createElement('span')\n    $headingText.classList.add(this.sectionHeadingTextClass)\n    // Copy the span ID to the heading text to allow it to be referenced by\n    // `aria-labelledby` on the hidden content area without \"Show this section\"\n    $headingText.id = $span.id\n\n    // Create an inner heading text container to limit the width of the focus\n    // state\n    const $headingTextFocus = document.createElement('span')\n    $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n    $headingText.appendChild($headingTextFocus)\n    // span could contain HTML elements\n    // (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n    $headingTextFocus.innerHTML = $span.innerHTML\n\n    // Create container for show / hide icons and text.\n    const $showHideToggle = document.createElement('span')\n    $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n    // Tell Google not to index the 'show' text as part of the heading. Must be\n    // set on the element before it's added to the DOM.\n    // See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n    $showHideToggle.setAttribute('data-nosnippet', '')\n    // Create an inner container to limit the width of the focus state\n    const $showHideToggleFocus = document.createElement('span')\n    $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n    $showHideToggle.appendChild($showHideToggleFocus)\n    // Create wrapper for the show / hide text. Append text after the show/hide icon\n    const $showHideText = document.createElement('span')\n    const $showHideIcon = document.createElement('span')\n    $showHideIcon.classList.add(this.upChevronIconClass)\n    $showHideToggleFocus.appendChild($showHideIcon)\n    $showHideText.classList.add(this.sectionShowHideTextClass)\n    $showHideToggleFocus.appendChild($showHideText)\n\n    // Append elements to the button:\n    // 1. Heading text\n    // 2. Punctuation\n    // 3. (Optional: Summary line followed by punctuation)\n    // 4. Show / hide toggle\n    $button.appendChild($headingText)\n    $button.appendChild(this.getButtonPunctuationEl())\n\n    // If summary content exists add to DOM in correct order\n    if ($summary?.parentNode) {\n      // Create a new `span` element and copy the summary line content from the\n      // original `div` to the new `span`. This is because the summary line text\n      // is now inside a button element, which can only contain phrasing\n      // content.\n      const $summarySpan = document.createElement('span')\n      // Create an inner summary container to limit the width of the summary\n      // focus state\n      const $summarySpanFocus = document.createElement('span')\n      $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n      $summarySpan.appendChild($summarySpanFocus)\n\n      // Get original attributes, and pass them to the replacement\n      for (const attr of Array.from($summary.attributes)) {\n        $summarySpan.setAttribute(attr.nodeName, `${attr.nodeValue}`)\n      }\n\n      // Copy original contents of summary to the new summary span\n      $summarySpanFocus.innerHTML = $summary.innerHTML\n\n      // Replace the original summary `div` with the new summary `span`\n      $summary.parentNode.replaceChild($summarySpan, $summary)\n\n      $button.appendChild($summarySpan)\n      $button.appendChild(this.getButtonPunctuationEl())\n    }\n\n    $button.appendChild($showHideToggle)\n\n    $heading.removeChild($span)\n    $heading.appendChild($button)\n  }\n\n  /**\n   * When a section is opened by the user agent via the 'beforematch' event\n   *\n   * @private\n   * @param {Event} event - Generic event\n   */\n  onBeforeMatch(event) {\n    const $fragment = event.target\n\n    // Handle elements with `.closest()` support only\n    if (!($fragment instanceof Element)) {\n      return\n    }\n\n    // Handle when fragment is inside section\n    const $section = $fragment.closest(`.${this.sectionClass}`)\n    if ($section) {\n      this.setExpanded(true, $section)\n    }\n  }\n\n  /**\n   * When section toggled, set and store state\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  onSectionToggle($section) {\n    const expanded = this.isExpanded($section)\n    this.setExpanded(!expanded, $section)\n\n    // Store the state in sessionStorage when a change is triggered\n    this.storeState($section)\n  }\n\n  /**\n   * When Open/Close All toggled, set and store state\n   *\n   * @private\n   */\n  onShowOrHideAllToggle() {\n    const nowExpanded = !this.checkIfAllSectionsOpen()\n\n    this.$sections.forEach(($section) => {\n      this.setExpanded(nowExpanded, $section)\n      this.storeState($section)\n    })\n\n    this.updateShowAllButton(nowExpanded)\n  }\n\n  /**\n   * Set section attributes when opened/closed\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   * @param {Element} $section - Section element\n   */\n  setExpanded(expanded, $section) {\n    const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`)\n    const $showHideText = $section.querySelector(\n      `.${this.sectionShowHideTextClass}`\n    )\n    const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n    const $content = $section.querySelector(`.${this.sectionContentClass}`)\n\n    if (!$content) {\n      throw new ElementError({\n        componentName: 'Accordion',\n        identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n      })\n    }\n\n    if (!$showHideIcon || !$showHideText || !$button) {\n      // Return early for elements we create\n      return\n    }\n\n    const newButtonText = expanded\n      ? this.i18n.t('hideSection')\n      : this.i18n.t('showSection')\n\n    $showHideText.textContent = newButtonText\n    $button.setAttribute('aria-expanded', `${expanded}`)\n\n    // Update aria-label combining\n    const ariaLabelParts = []\n\n    const $headingText = $section.querySelector(\n      `.${this.sectionHeadingTextClass}`\n    )\n    if ($headingText) {\n      ariaLabelParts.push(`${$headingText.textContent}`.trim())\n    }\n\n    const $summary = $section.querySelector(`.${this.sectionSummaryClass}`)\n    if ($summary) {\n      ariaLabelParts.push(`${$summary.textContent}`.trim())\n    }\n\n    const ariaLabelMessage = expanded\n      ? this.i18n.t('hideSectionAriaLabel')\n      : this.i18n.t('showSectionAriaLabel')\n    ariaLabelParts.push(ariaLabelMessage)\n\n    /*\n     * Join with a comma to add pause for assistive technology.\n     * Example: [heading]Section A ,[pause] Show this section.\n     * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n     */\n    $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n    // Swap icon, change class\n    if (expanded) {\n      $content.removeAttribute('hidden')\n      $section.classList.add(this.sectionExpandedClass)\n      $showHideIcon.classList.remove(this.downChevronIconClass)\n    } else {\n      $content.setAttribute('hidden', 'until-found')\n      $section.classList.remove(this.sectionExpandedClass)\n      $showHideIcon.classList.add(this.downChevronIconClass)\n    }\n\n    // See if \"Show all sections\" button text should be updated\n    const areAllSectionsOpen = this.checkIfAllSectionsOpen()\n    this.updateShowAllButton(areAllSectionsOpen)\n  }\n\n  /**\n   * Get state of section\n   *\n   * @private\n   * @param {Element} $section - Section element\n   * @returns {boolean} True if expanded\n   */\n  isExpanded($section) {\n    return $section.classList.contains(this.sectionExpandedClass)\n  }\n\n  /**\n   * Check if all sections are open\n   *\n   * @private\n   * @returns {boolean} True if all sections are open\n   */\n  checkIfAllSectionsOpen() {\n    const sectionsCount = this.$sections.length\n    const expandedSectionCount = this.$module.querySelectorAll(\n      `.${this.sectionExpandedClass}`\n    ).length\n    const areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n    return areAllSectionsOpen\n  }\n\n  /**\n   * Update \"Show all sections\" button\n   *\n   * @private\n   * @param {boolean} expanded - Section expanded\n   */\n  updateShowAllButton(expanded) {\n    if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n      return\n    }\n\n    this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n    this.$showAllText.textContent = expanded\n      ? this.i18n.t('hideAllSections')\n      : this.i18n.t('showAllSections')\n    this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded)\n  }\n\n  /**\n   * Set the state of the accordions in sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  storeState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      // We need a unique way of identifying each content in the Accordion.\n      // Since an `#id` should be unique and an `id` is required for `aria-`\n      // attributes `id` can be safely used.\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = $button.getAttribute('aria-expanded')\n\n        // Only set the state when both `contentId` and `contentState` are taken\n        // from the DOM.\n        if (contentId && contentState) {\n          window.sessionStorage.setItem(contentId, contentState)\n        }\n      }\n    }\n  }\n\n  /**\n   * Read the state of the accordions from sessionStorage\n   *\n   * @private\n   * @param {Element} $section - Section element\n   */\n  setInitialState($section) {\n    if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`)\n\n      if ($button) {\n        const contentId = $button.getAttribute('aria-controls')\n        const contentState = contentId\n          ? window.sessionStorage.getItem(contentId)\n          : null\n\n        if (contentState !== null) {\n          this.setExpanded(contentState === 'true', $section)\n        }\n      }\n    }\n  }\n\n  /**\n   * Create an element to improve semantics of the section button with\n   * punctuation\n   *\n   * Adding punctuation to the button can also improve its general semantics by\n   * dividing its contents into thematic chunks. See\n   * https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n   *\n   * @private\n   * @returns {Element} DOM element\n   */\n  getButtonPunctuationEl() {\n    const $punctuationEl = document.createElement('span')\n    $punctuationEl.classList.add(\n      'govuk-visually-hidden',\n      this.sectionHeadingDividerClass\n    )\n    $punctuationEl.innerHTML = ', '\n    return $punctuationEl\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-accordion'\n\n  /**\n   * Accordion default config\n   *\n   * @see {@link AccordionConfig}\n   * @constant\n   * @type {AccordionConfig}\n   */\n  static defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  })\n}\n\nconst helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    const testString = 'this is the test string'\n    let result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result =\n        window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Accordion config\n *\n * @see {@link Accordion.defaults}\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @see {@link Accordion.defaults.i18n}\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n"],"names":["Accordion","GOVUKFrontendComponent","constructor","$module","config","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","browserSupportsSessionStorage","$showAllButton","$showAllIcon","$showAllText","HTMLElement","ElementError","componentName","element","identifier","mergeConfigs","defaults","normaliseDataset","dataset","I18n","extractConfigByNamespace","querySelectorAll","length","helper","checkForSessionStorage","initControls","initSectionHeaders","areAllSectionsOpen","checkIfAllSectionsOpen","updateShowAllButton","document","createElement","setAttribute","classList","add","appendChild","$accordionControls","insertBefore","firstChild","addEventListener","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","i","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","index","$span","$heading","$summary","$button","id","attr","Array","from","attributes","nodeName","nodeValue","$headingText","$headingTextFocus","innerHTML","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","parentNode","$summarySpan","$summarySpanFocus","replaceChild","removeChild","$fragment","target","Element","closest","expanded","storeState","nowExpanded","$content","newButtonText","t","textContent","ariaLabelParts","push","trim","ariaLabelMessage","join","removeAttribute","remove","contains","sectionsCount","expandedSectionCount","toString","toggle","rememberExpanded","contentId","getAttribute","contentState","window","sessionStorage","setItem","getItem","$punctuationEl","moduleName","Object","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","testString","result","removeItem","exception"],"mappings":"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"}