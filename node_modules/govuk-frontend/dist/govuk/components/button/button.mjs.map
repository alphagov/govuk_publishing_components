{"version":3,"file":"button.mjs","sources":["../../../../src/govuk/components/button/button.mjs"],"sourcesContent":["import { mergeConfigs } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { ElementError } from '../../errors/index.mjs'\nimport { GOVUKFrontendComponent } from '../../govuk-frontend-component.mjs'\n\nconst KEY_SPACE = 32\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * JavaScript enhancements for the Button component\n *\n * @preserve\n */\nexport class Button extends GOVUKFrontendComponent {\n  /** @private */\n  $module\n\n  /**\n   * @private\n   * @type {ButtonConfig}\n   */\n  config\n\n  /**\n   * @private\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $module - HTML element to use for button\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($module, config = {}) {\n    super()\n\n    if (!($module instanceof HTMLElement)) {\n      throw new ElementError({\n        componentName: 'Button',\n        element: $module,\n        identifier: 'Root element (`$module`)'\n      })\n    }\n\n    this.$module = $module\n\n    this.config = mergeConfigs(\n      Button.defaults,\n      config,\n      normaliseDataset($module.dataset)\n    )\n\n    this.$module.addEventListener('keydown', (event) =>\n      this.handleKeyDown(event)\n    )\n    this.$module.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * Trigger a click event when the space key is pressed\n   *\n   * Some screen readers tell users they can use the space bar to activate\n   * things with the 'button' role, so we need to match the functionality of\n   * native HTML buttons.\n   *\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @private\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const $target = event.target\n\n    // Handle space bar only\n    if (event.keyCode !== KEY_SPACE) {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      $target instanceof HTMLElement &&\n      $target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault() // prevent the page from scrolling\n      $target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by double\n   * clicking buttons.\n   *\n   * @private\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running, prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'govuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n"],"names":["KEY_SPACE","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","GOVUKFrontendComponent","constructor","$module","config","debounceFormSubmitTimer","HTMLElement","ElementError","componentName","element","identifier","mergeConfigs","defaults","normaliseDataset","dataset","addEventListener","event","handleKeyDown","debounce","$target","target","keyCode","getAttribute","preventDefault","click","preventDoubleClick","window","setTimeout","moduleName","Object","freeze"],"mappings":";;;;;AAKA,MAAMA,SAAS,GAAG,EAAE,CAAA;AACpB,MAAMC,2BAA2B,GAAG,CAAC,CAAA;;AAErC;AACA;AACA;AACA;AACA;AACO,MAAMC,MAAM,SAASC,sBAAsB,CAAC;AAgBjD;AACF;AACA;AACA;AACEC,EAAAA,WAAWA,CAACC,OAAO,EAAEC,MAAM,GAAG,EAAE,EAAE;AAChC,IAAA,KAAK,EAAE,CAAA;AAAA,IAAA,IAAA,CAnBTD,OAAO,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,IAAA,CAMPC,MAAM,GAAA,KAAA,CAAA,CAAA;IAAA,IAMNC,CAAAA,uBAAuB,GAAG,IAAI,CAAA;AAS5B,IAAA,IAAI,EAAEF,OAAO,YAAYG,WAAW,CAAC,EAAE;MACrC,MAAM,IAAIC,YAAY,CAAC;AACrBC,QAAAA,aAAa,EAAE,QAAQ;AACvBC,QAAAA,OAAO,EAAEN,OAAO;AAChBO,QAAAA,UAAU,EAAE,0BAAA;AACd,OAAC,CAAC,CAAA;AACJ,KAAA;IAEA,IAAI,CAACP,OAAO,GAAGA,OAAO,CAAA;AAEtB,IAAA,IAAI,CAACC,MAAM,GAAGO,YAAY,CACxBX,MAAM,CAACY,QAAQ,EACfR,MAAM,EACNS,gBAAgB,CAACV,OAAO,CAACW,OAAO,CAClC,CAAC,CAAA;AAED,IAAA,IAAI,CAACX,OAAO,CAACY,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAC7C,IAAI,CAACC,aAAa,CAACD,KAAK,CAC1B,CAAC,CAAA;AACD,IAAA,IAAI,CAACb,OAAO,CAACY,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK,IAAI,CAACE,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAA;AACzE,GAAA;EAcAC,aAAaA,CAACD,KAAK,EAAE;AACnB,IAAA,MAAMG,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAA;AAG5B,IAAA,IAAIJ,KAAK,CAACK,OAAO,KAAKvB,SAAS,EAAE;AAC/B,MAAA,OAAA;AACF,KAAA;AAGA,IAAA,IACEqB,OAAO,YAAYb,WAAW,IAC9Ba,OAAO,CAACG,YAAY,CAAC,MAAM,CAAC,KAAK,QAAQ,EACzC;MACAN,KAAK,CAACO,cAAc,EAAE,CAAA;MACtBJ,OAAO,CAACK,KAAK,EAAE,CAAA;AACjB,KAAA;AACF,GAAA;EAaAN,QAAQA,CAACF,KAAK,EAAE;AAEd,IAAA,IAAI,CAAC,IAAI,CAACZ,MAAM,CAACqB,kBAAkB,EAAE;AACnC,MAAA,OAAA;AACF,KAAA;IAGA,IAAI,IAAI,CAACpB,uBAAuB,EAAE;MAChCW,KAAK,CAACO,cAAc,EAAE,CAAA;AACtB,MAAA,OAAO,KAAK,CAAA;AACd,KAAA;AAEA,IAAA,IAAI,CAAClB,uBAAuB,GAAGqB,MAAM,CAACC,UAAU,CAAC,MAAM;MACrD,IAAI,CAACtB,uBAAuB,GAAG,IAAI,CAAA;AACrC,KAAC,EAAEN,2BAA2B,GAAG,IAAI,CAAC,CAAA;AACxC,GAAA;AAiBF,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA9HaC,MAAM,CA0GV4B,UAAU,GAAG,cAAc,CAAA;AA1GvB5B,MAAM,CAmHVY,QAAQ,GAAGiB,MAAM,CAACC,MAAM,CAAC;AAC9BL,EAAAA,kBAAkB,EAAE,KAAA;AACtB,CAAC,CAAC;;;;"}