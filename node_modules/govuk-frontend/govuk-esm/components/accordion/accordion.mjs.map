{"version":3,"file":"accordion.mjs","sources":["../../../../src/govuk/components/accordion/accordion.mjs"],"sourcesContent":["/* eslint-disable es-x/no-function-prototype-bind -- Polyfill imported */\n/* eslint-disable es-x/no-string-prototype-trim -- Polyfill imported */\n\nimport { nodeListForEach, mergeConfigs, extractConfigByNamespace } from '../../common/index.mjs'\nimport { normaliseDataset } from '../../common/normalise-dataset.mjs'\nimport { I18n } from '../../i18n.mjs'\nimport '../../vendor/polyfills/Element/prototype/classList.mjs'\nimport '../../vendor/polyfills/Element/prototype/closest.mjs'\nimport '../../vendor/polyfills/Event.mjs' // addEventListener, event.target normalization and DOMContentLoaded\nimport '../../vendor/polyfills/Function/prototype/bind.mjs'\nimport '../../vendor/polyfills/String/prototype/trim.mjs'\n\n/**\n * @constant\n * @type {AccordionTranslations}\n * @see Default value for {@link AccordionConfig.i18n}\n * @default\n */\nvar ACCORDION_TRANSLATIONS = {\n  hideAllSections: 'Hide all sections',\n  hideSection: 'Hide',\n  hideSectionAriaLabel: 'Hide this section',\n  showAllSections: 'Show all sections',\n  showSection: 'Show',\n  showSectionAriaLabel: 'Show this section'\n}\n\n/**\n * Accordion component\n *\n * This allows a collection of sections to be collapsed by default, showing only\n * their headers. Sections can be expanded or collapsed individually by clicking\n * their headers. A \"Show all sections\" button is also added to the top of the\n * accordion, which switches to \"Hide all sections\" when all the sections are\n * expanded.\n *\n * The state of each section is saved to the DOM via the `aria-expanded`\n * attribute, which also provides accessibility.\n *\n * @class\n * @param {Element} $module - HTML element to use for accordion\n * @param {AccordionConfig} [config] - Accordion config\n */\nfunction Accordion ($module, config) {\n  if (!($module instanceof HTMLElement)) {\n    return this\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$module = $module\n\n  var defaultConfig = {\n    i18n: ACCORDION_TRANSLATIONS,\n    rememberExpanded: true\n  }\n\n  /**\n   * @deprecated Will be made private in v5.0\n   * @type {AccordionConfig}\n   */\n  this.config = mergeConfigs(\n    defaultConfig,\n    config || {},\n    normaliseDataset($module.dataset)\n  )\n\n  /** @deprecated Will be made private in v5.0 */\n  this.i18n = new I18n(extractConfigByNamespace(this.config, 'i18n'))\n\n  /** @deprecated Will be made private in v5.0 */\n  this.controlsClass = 'govuk-accordion__controls'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.showAllClass = 'govuk-accordion__show-all'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.showAllTextClass = 'govuk-accordion__show-all-text'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionClass = 'govuk-accordion__section'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionExpandedClass = 'govuk-accordion__section--expanded'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionButtonClass = 'govuk-accordion__section-button'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionHeaderClass = 'govuk-accordion__section-header'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionHeadingClass = 'govuk-accordion__section-heading'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionHeadingTextClass = 'govuk-accordion__section-heading-text'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionShowHideToggleClass = 'govuk-accordion__section-toggle'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionShowHideTextClass = 'govuk-accordion__section-toggle-text'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.upChevronIconClass = 'govuk-accordion-nav__chevron'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.downChevronIconClass = 'govuk-accordion-nav__chevron--down'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionSummaryClass = 'govuk-accordion__section-summary'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'\n\n  /** @deprecated Will be made private in v5.0 */\n  this.sectionContentClass = 'govuk-accordion__section-content'\n\n  var $sections = this.$module.querySelectorAll('.' + this.sectionClass)\n  if (!$sections.length) {\n    return this\n  }\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$sections = $sections\n\n  /** @deprecated Will be made private in v5.0 */\n  this.browserSupportsSessionStorage = helper.checkForSessionStorage()\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$showAllButton = null\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$showAllIcon = null\n\n  /** @deprecated Will be made private in v5.0 */\n  this.$showAllText = null\n}\n\n/**\n * Initialise component\n */\nAccordion.prototype.init = function () {\n  // Check that required elements are present\n  if (!this.$module || !this.$sections) {\n    return\n  }\n\n  this.initControls()\n  this.initSectionHeaders()\n\n  // See if \"Show all sections\" button text should be updated\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen()\n  this.updateShowAllButton(areAllSectionsOpen)\n}\n\n/**\n * Initialise controls and set attributes\n *\n * @deprecated Will be made private in v5.0\n */\nAccordion.prototype.initControls = function () {\n  // Create \"Show all\" button and set attributes\n  this.$showAllButton = document.createElement('button')\n  this.$showAllButton.setAttribute('type', 'button')\n  this.$showAllButton.setAttribute('class', this.showAllClass)\n  this.$showAllButton.setAttribute('aria-expanded', 'false')\n\n  // Create icon, add to element\n  this.$showAllIcon = document.createElement('span')\n  this.$showAllIcon.classList.add(this.upChevronIconClass)\n  this.$showAllButton.appendChild(this.$showAllIcon)\n\n  // Create control wrapper and add controls to it\n  var $accordionControls = document.createElement('div')\n  $accordionControls.setAttribute('class', this.controlsClass)\n  $accordionControls.appendChild(this.$showAllButton)\n  this.$module.insertBefore($accordionControls, this.$module.firstChild)\n\n  // Build additional wrapper for Show all toggle text and place after icon\n  this.$showAllText = document.createElement('span')\n  this.$showAllText.classList.add(this.showAllTextClass)\n  this.$showAllButton.appendChild(this.$showAllText)\n\n  // Handle click events on the show/hide all button\n  this.$showAllButton.addEventListener('click', this.onShowOrHideAllToggle.bind(this))\n\n  // Handle 'beforematch' events, if the user agent supports them\n  if ('onbeforematch' in document) {\n    document.addEventListener('beforematch', this.onBeforeMatch.bind(this))\n  }\n}\n\n/**\n * Initialise section headers\n *\n * @deprecated Will be made private in v5.0\n */\nAccordion.prototype.initSectionHeaders = function () {\n  var $component = this\n  var $sections = this.$sections\n\n  // Loop through sections\n  nodeListForEach($sections, function ($section, i) {\n    var $header = $section.querySelector('.' + $component.sectionHeaderClass)\n    if (!$header) {\n      return\n    }\n\n    // Set header attributes\n    $component.constructHeaderMarkup($header, i)\n    $component.setExpanded($component.isExpanded($section), $section)\n\n    // Handle events\n    $header.addEventListener('click', $component.onSectionToggle.bind($component, $section))\n\n    // See if there is any state stored in sessionStorage and set the sections to\n    // open or closed.\n    $component.setInitialState($section)\n  })\n}\n\n/**\n * Construct section header\n *\n * @deprecated Will be made private in v5.0\n * @param {Element} $header - Section header\n * @param {number} index - Section index\n */\nAccordion.prototype.constructHeaderMarkup = function ($header, index) {\n  var $span = $header.querySelector('.' + this.sectionButtonClass)\n  var $heading = $header.querySelector('.' + this.sectionHeadingClass)\n  var $summary = $header.querySelector('.' + this.sectionSummaryClass)\n\n  if (!$span || !$heading) {\n    return\n  }\n\n  // Create a button element that will replace the '.govuk-accordion__section-button' span\n  var $button = document.createElement('button')\n  $button.setAttribute('type', 'button')\n  $button.setAttribute('aria-controls', this.$module.id + '-content-' + (index + 1).toString())\n\n  // Copy all attributes (https://developer.mozilla.org/en-US/docs/Web/API/Element/attributes) from $span to $button\n  for (var i = 0; i < $span.attributes.length; i++) {\n    var attr = $span.attributes.item(i)\n    // Add all attributes but not ID as this is being added to\n    // the section heading ($headingText)\n    if (attr.nodeName !== 'id') {\n      $button.setAttribute(attr.nodeName, attr.nodeValue)\n    }\n  }\n\n  // Create container for heading text so it can be styled\n  var $headingText = document.createElement('span')\n  $headingText.classList.add(this.sectionHeadingTextClass)\n  // Copy the span ID to the heading text to allow it to be referenced by `aria-labelledby` on the\n  // hidden content area without \"Show this section\"\n  $headingText.id = $span.id\n\n  // Create an inner heading text container to limit the width of the focus state\n  var $headingTextFocus = document.createElement('span')\n  $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass)\n  $headingText.appendChild($headingTextFocus)\n  // span could contain HTML elements (see https://www.w3.org/TR/2011/WD-html5-20110525/content-models.html#phrasing-content)\n  $headingTextFocus.innerHTML = $span.innerHTML\n\n  // Create container for show / hide icons and text.\n  var $showHideToggle = document.createElement('span')\n  $showHideToggle.classList.add(this.sectionShowHideToggleClass)\n  // Tell Google not to index the 'show' text as part of the heading\n  // For the snippet to work with JavaScript, it must be added before adding the page element to the\n  // page's DOM. See https://developers.google.com/search/docs/advanced/robots/robots_meta_tag#data-nosnippet-attr\n  $showHideToggle.setAttribute('data-nosnippet', '')\n  // Create an inner container to limit the width of the focus state\n  var $showHideToggleFocus = document.createElement('span')\n  $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass)\n  $showHideToggle.appendChild($showHideToggleFocus)\n  // Create wrapper for the show / hide text. Append text after the show/hide icon\n  var $showHideText = document.createElement('span')\n  var $showHideIcon = document.createElement('span')\n  $showHideIcon.classList.add(this.upChevronIconClass)\n  $showHideToggleFocus.appendChild($showHideIcon)\n  $showHideText.classList.add(this.sectionShowHideTextClass)\n  $showHideToggleFocus.appendChild($showHideText)\n\n  // Append elements to the button:\n  // 1. Heading text\n  // 2. Punctuation\n  // 3. (Optional: Summary line followed by punctuation)\n  // 4. Show / hide toggle\n  $button.appendChild($headingText)\n  $button.appendChild(this.getButtonPunctuationEl())\n\n  // If summary content exists add to DOM in correct order\n  if ($summary) {\n    // Create a new `span` element and copy the summary line content from the original `div` to the\n    // new `span`\n    // This is because the summary line text is now inside a button element, which can only contain\n    // phrasing content\n    var $summarySpan = document.createElement('span')\n    // Create an inner summary container to limit the width of the summary focus state\n    var $summarySpanFocus = document.createElement('span')\n    $summarySpanFocus.classList.add(this.sectionSummaryFocusClass)\n    $summarySpan.appendChild($summarySpanFocus)\n\n    // Get original attributes, and pass them to the replacement\n    for (var j = 0, l = $summary.attributes.length; j < l; ++j) {\n      var nodeName = $summary.attributes.item(j).nodeName\n      var nodeValue = $summary.attributes.item(j).nodeValue\n      $summarySpan.setAttribute(nodeName, nodeValue)\n    }\n\n    // Copy original contents of summary to the new summary span\n    $summarySpanFocus.innerHTML = $summary.innerHTML\n\n    // Replace the original summary `div` with the new summary `span`\n    $summary.parentNode.replaceChild($summarySpan, $summary)\n\n    $button.appendChild($summarySpan)\n    $button.appendChild(this.getButtonPunctuationEl())\n  }\n\n  $button.appendChild($showHideToggle)\n\n  $heading.removeChild($span)\n  $heading.appendChild($button)\n}\n\n/**\n * When a section is opened by the user agent via the 'beforematch' event\n *\n * @deprecated Will be made private in v5.0\n * @param {Event} event - Generic event\n */\nAccordion.prototype.onBeforeMatch = function (event) {\n  var $fragment = event.target\n\n  // Handle elements with `.closest()` support only\n  if (!($fragment instanceof Element)) {\n    return\n  }\n\n  // Handle when fragment is inside section\n  var $section = $fragment.closest('.' + this.sectionClass)\n  if ($section) {\n    this.setExpanded(true, $section)\n  }\n}\n\n/**\n * When section toggled, set and store state\n *\n * @deprecated Will be made private in v5.0\n * @param {Element} $section - Section element\n */\nAccordion.prototype.onSectionToggle = function ($section) {\n  var expanded = this.isExpanded($section)\n  this.setExpanded(!expanded, $section)\n\n  // Store the state in sessionStorage when a change is triggered\n  this.storeState($section)\n}\n\n/**\n * When Open/Close All toggled, set and store state\n *\n * @deprecated Will be made private in v5.0\n */\nAccordion.prototype.onShowOrHideAllToggle = function () {\n  var $component = this\n  var $sections = this.$sections\n\n  var nowExpanded = !this.checkIfAllSectionsOpen()\n\n  // Loop through sections\n  nodeListForEach($sections, function ($section) {\n    $component.setExpanded(nowExpanded, $section)\n    // Store the state in sessionStorage when a change is triggered\n    $component.storeState($section)\n  })\n\n  $component.updateShowAllButton(nowExpanded)\n}\n\n/**\n * Set section attributes when opened/closed\n *\n * @deprecated Will be made private in v5.0\n * @param {boolean} expanded - Section expanded\n * @param {Element} $section - Section element\n */\nAccordion.prototype.setExpanded = function (expanded, $section) {\n  var $showHideIcon = $section.querySelector('.' + this.upChevronIconClass)\n  var $showHideText = $section.querySelector('.' + this.sectionShowHideTextClass)\n  var $button = $section.querySelector('.' + this.sectionButtonClass)\n  var $content = $section.querySelector('.' + this.sectionContentClass)\n\n  if (!$showHideIcon ||\n    !($showHideText instanceof HTMLElement) ||\n    !$button ||\n    !$content) {\n    return\n  }\n\n  var newButtonText = expanded\n    ? this.i18n.t('hideSection')\n    : this.i18n.t('showSection')\n\n  $showHideText.innerText = newButtonText\n  $button.setAttribute('aria-expanded', expanded.toString())\n\n  // Update aria-label combining\n  var ariaLabelParts = []\n\n  var $headingText = $section.querySelector('.' + this.sectionHeadingTextClass)\n  if ($headingText instanceof HTMLElement) {\n    ariaLabelParts.push($headingText.innerText.trim())\n  }\n\n  var $summary = $section.querySelector('.' + this.sectionSummaryClass)\n  if ($summary instanceof HTMLElement) {\n    ariaLabelParts.push($summary.innerText.trim())\n  }\n\n  var ariaLabelMessage = expanded\n    ? this.i18n.t('hideSectionAriaLabel')\n    : this.i18n.t('showSectionAriaLabel')\n  ariaLabelParts.push(ariaLabelMessage)\n\n  /*\n   * Join with a comma to add pause for assistive technology.\n   * Example: [heading]Section A ,[pause] Show this section.\n   * https://accessibility.blog.gov.uk/2017/12/18/what-working-on-gov-uk-navigation-taught-us-about-accessibility/\n   */\n  $button.setAttribute('aria-label', ariaLabelParts.join(' , '))\n\n  // Swap icon, change class\n  if (expanded) {\n    $content.removeAttribute('hidden')\n    $section.classList.add(this.sectionExpandedClass)\n    $showHideIcon.classList.remove(this.downChevronIconClass)\n  } else {\n    $content.setAttribute('hidden', 'until-found')\n    $section.classList.remove(this.sectionExpandedClass)\n    $showHideIcon.classList.add(this.downChevronIconClass)\n  }\n\n  // See if \"Show all sections\" button text should be updated\n  var areAllSectionsOpen = this.checkIfAllSectionsOpen()\n  this.updateShowAllButton(areAllSectionsOpen)\n}\n\n/**\n * Get state of section\n *\n * @deprecated Will be made private in v5.0\n * @param {Element} $section - Section element\n * @returns {boolean} True if expanded\n */\nAccordion.prototype.isExpanded = function ($section) {\n  return $section.classList.contains(this.sectionExpandedClass)\n}\n\n/**\n * Check if all sections are open\n *\n * @deprecated Will be made private in v5.0\n * @returns {boolean} True if all sections are open\n */\nAccordion.prototype.checkIfAllSectionsOpen = function () {\n  // Get a count of all the Accordion sections\n  var sectionsCount = this.$sections.length\n  // Get a count of all Accordion sections that are expanded\n  var expandedSectionCount = this.$module.querySelectorAll('.' + this.sectionExpandedClass).length\n  var areAllSectionsOpen = sectionsCount === expandedSectionCount\n\n  return areAllSectionsOpen\n}\n\n/**\n * Update \"Show all sections\" button\n *\n * @deprecated Will be made private in v5.0\n * @param {boolean} expanded - Section expanded\n */\nAccordion.prototype.updateShowAllButton = function (expanded) {\n  var newButtonText = expanded\n    ? this.i18n.t('hideAllSections')\n    : this.i18n.t('showAllSections')\n\n  this.$showAllButton.setAttribute('aria-expanded', expanded.toString())\n  this.$showAllText.innerText = newButtonText\n\n  // Swap icon, toggle class\n  if (expanded) {\n    this.$showAllIcon.classList.remove(this.downChevronIconClass)\n  } else {\n    this.$showAllIcon.classList.add(this.downChevronIconClass)\n  }\n}\n\nvar helper = {\n  /**\n   * Check for `window.sessionStorage`, and that it actually works.\n   *\n   * @returns {boolean} True if session storage is available\n   */\n  checkForSessionStorage: function () {\n    var testString = 'this is the test string'\n    var result\n    try {\n      window.sessionStorage.setItem(testString, testString)\n      result = window.sessionStorage.getItem(testString) === testString.toString()\n      window.sessionStorage.removeItem(testString)\n      return result\n    } catch (exception) {\n      return false\n    }\n  }\n}\n\n/**\n * Set the state of the accordions in sessionStorage\n *\n * @deprecated Will be made private in v5.0\n * @param {Element} $section - Section element\n */\nAccordion.prototype.storeState = function ($section) {\n  if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n    // We need a unique way of identifying each content in the Accordion. Since\n    // an `#id` should be unique and an `id` is required for `aria-` attributes\n    // `id` can be safely used.\n    var $button = $section.querySelector('.' + this.sectionButtonClass)\n\n    if ($button) {\n      var contentId = $button.getAttribute('aria-controls')\n      var contentState = $button.getAttribute('aria-expanded')\n\n      // Only set the state when both `contentId` and `contentState` are taken from the DOM.\n      if (contentId && contentState) {\n        window.sessionStorage.setItem(contentId, contentState)\n      }\n    }\n  }\n}\n\n/**\n * Read the state of the accordions from sessionStorage\n *\n * @deprecated Will be made private in v5.0\n * @param {Element} $section - Section element\n */\nAccordion.prototype.setInitialState = function ($section) {\n  if (this.browserSupportsSessionStorage && this.config.rememberExpanded) {\n    var $button = $section.querySelector('.' + this.sectionButtonClass)\n\n    if ($button) {\n      var contentId = $button.getAttribute('aria-controls')\n      var contentState = contentId ? window.sessionStorage.getItem(contentId) : null\n\n      if (contentState !== null) {\n        this.setExpanded(contentState === 'true', $section)\n      }\n    }\n  }\n}\n\n/**\n * Create an element to improve semantics of the section button with punctuation\n *\n * Adding punctuation to the button can also improve its general semantics by dividing its contents\n * into thematic chunks.\n * See https://github.com/alphagov/govuk-frontend/issues/2327#issuecomment-922957442\n *\n * @deprecated Will be made private in v5.0\n * @returns {Element} DOM element\n */\nAccordion.prototype.getButtonPunctuationEl = function () {\n  var $punctuationEl = document.createElement('span')\n  $punctuationEl.classList.add('govuk-visually-hidden', this.sectionHeadingDividerClass)\n  $punctuationEl.innerHTML = ', '\n  return $punctuationEl\n}\n\nexport default Accordion\n\n/**\n * Accordion config\n *\n * @typedef {object} AccordionConfig\n * @property {AccordionTranslations} [i18n = ACCORDION_TRANSLATIONS] - See constant {@link ACCORDION_TRANSLATIONS}\n * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n *   state of each section is remembered and restored when navigating.\n */\n\n/**\n * Accordion translations\n *\n * @typedef {object} AccordionTranslations\n *\n * Messages used by the component for the labels of its buttons. This includes\n * the visible text shown on screen, and text to help assistive technology users\n * for the buttons toggling each section.\n * @property {string} [hideAllSections] - The text content for the 'Hide all\n *   sections' button, used when at least one section is expanded.\n * @property {string} [hideSection] - The text content for the 'Hide'\n *   button, used when a section is expanded.\n * @property {string} [hideSectionAriaLabel] - The text content appended to the\n *   'Hide' button's accessible name when a section is expanded.\n * @property {string} [showAllSections] - The text content for the 'Show all\n *   sections' button, used when all sections are collapsed.\n * @property {string} [showSection] - The text content for the 'Show'\n *   button, used when a section is collapsed.\n * @property {string} [showSectionAriaLabel] - The text content appended to the\n *   'Show' button's accessible name when a section is expanded.\n */\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,AAUA;;;;;;;AAOA,IAAI,sBAAsB,GAAG;EAC3B,eAAe,EAAE,mBAAmB;EACpC,WAAW,EAAE,MAAM;EACnB,oBAAoB,EAAE,mBAAmB;EACzC,eAAe,EAAE,mBAAmB;EACpC,WAAW,EAAE,MAAM;EACnB,oBAAoB,EAAE,mBAAmB;EAC1C;;;;;;;;;;;;;;;;;;AAkBD,SAAS,SAAS,EAAE,OAAO,EAAE,MAAM,EAAE;EACnC,IAAI,EAAE,OAAO,YAAY,WAAW,CAAC,EAAE;IACrC,OAAO,IAAI;GACZ;;;EAGD,IAAI,CAAC,OAAO,GAAG,QAAO;;EAEtB,IAAI,aAAa,GAAG;IAClB,IAAI,EAAE,sBAAsB;IAC5B,gBAAgB,EAAE,IAAI;IACvB;;;;;;EAMD,IAAI,CAAC,MAAM,GAAG,YAAY;IACxB,aAAa;IACb,MAAM,IAAI,EAAE;IACZ,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC;IAClC;;;EAGD,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,EAAC;;;EAGnE,IAAI,CAAC,aAAa,GAAG,4BAA2B;;;EAGhD,IAAI,CAAC,YAAY,GAAG,4BAA2B;;;EAG/C,IAAI,CAAC,gBAAgB,GAAG,iCAAgC;;;EAGxD,IAAI,CAAC,YAAY,GAAG,2BAA0B;;;EAG9C,IAAI,CAAC,oBAAoB,GAAG,qCAAoC;;;EAGhE,IAAI,CAAC,kBAAkB,GAAG,kCAAiC;;;EAG3D,IAAI,CAAC,kBAAkB,GAAG,kCAAiC;;;EAG3D,IAAI,CAAC,mBAAmB,GAAG,mCAAkC;;;EAG7D,IAAI,CAAC,0BAA0B,GAAG,2CAA0C;;;EAG5E,IAAI,CAAC,uBAAuB,GAAG,wCAAuC;;;EAGtE,IAAI,CAAC,4BAA4B,GAAG,8CAA6C;;;EAGjF,IAAI,CAAC,0BAA0B,GAAG,kCAAiC;;;EAGnE,IAAI,CAAC,+BAA+B,GAAG,wCAAuC;;;EAG9E,IAAI,CAAC,wBAAwB,GAAG,uCAAsC;;;EAGtE,IAAI,CAAC,kBAAkB,GAAG,+BAA8B;;;EAGxD,IAAI,CAAC,oBAAoB,GAAG,qCAAoC;;;EAGhE,IAAI,CAAC,mBAAmB,GAAG,mCAAkC;;;EAG7D,IAAI,CAAC,wBAAwB,GAAG,yCAAwC;;;EAGxE,IAAI,CAAC,mBAAmB,GAAG,mCAAkC;;EAE7D,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,EAAC;EACtE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;IACrB,OAAO,IAAI;GACZ;;;EAGD,IAAI,CAAC,SAAS,GAAG,UAAS;;;EAG1B,IAAI,CAAC,6BAA6B,GAAG,MAAM,CAAC,sBAAsB,GAAE;;;EAGpE,IAAI,CAAC,cAAc,GAAG,KAAI;;;EAG1B,IAAI,CAAC,YAAY,GAAG,KAAI;;;EAGxB,IAAI,CAAC,YAAY,GAAG,KAAI;CACzB;;;;;AAKD,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;;EAErC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;IACpC,MAAM;GACP;;EAED,IAAI,CAAC,YAAY,GAAE;EACnB,IAAI,CAAC,kBAAkB,GAAE;;;EAGzB,IAAI,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,GAAE;EACtD,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAC;EAC7C;;;;;;;AAOD,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;;EAE7C,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAC;EACtD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAC;EAClD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAC;EAC5D,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,EAAC;;;EAG1D,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EAClD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC;EACxD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAC;;;EAGlD,IAAI,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAC;EACtD,kBAAkB,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAC;EAC5D,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAC;EACnD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC;;;EAGtE,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EAClD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAC;EACtD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,EAAC;;;EAGlD,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;;;EAGpF,IAAI,eAAe,IAAI,QAAQ,EAAE;IAC/B,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC;GACxE;EACF;;;;;;;AAOD,SAAS,CAAC,SAAS,CAAC,kBAAkB,GAAG,YAAY;EACnD,IAAI,UAAU,GAAG,KAAI;EACrB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAS;;;EAG9B,eAAe,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE,CAAC,EAAE;IAChD,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,UAAU,CAAC,kBAAkB,EAAC;IACzE,IAAI,CAAC,OAAO,EAAE;MACZ,MAAM;KACP;;;IAGD,UAAU,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC,EAAC;IAC5C,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAC;;;IAGjE,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,EAAC;;;;IAIxF,UAAU,CAAC,eAAe,CAAC,QAAQ,EAAC;GACrC,EAAC;EACH;;;;;;;;;AASD,SAAS,CAAC,SAAS,CAAC,qBAAqB,GAAG,UAAU,OAAO,EAAE,KAAK,EAAE;EACpE,IAAI,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAC;EAChE,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAC;EACpE,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAC;;EAEpE,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;IACvB,MAAM;GACP;;;EAGD,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAC;EAC9C,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAC;EACtC,OAAO,CAAC,YAAY,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,WAAW,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAC;;;EAG7F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChD,IAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAC;;;IAGnC,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE;MAC1B,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAC;KACpD;GACF;;;EAGD,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EACjD,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAC;;;EAGxD,YAAY,CAAC,EAAE,GAAG,KAAK,CAAC,GAAE;;;EAG1B,IAAI,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EACtD,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,4BAA4B,EAAC;EAClE,YAAY,CAAC,WAAW,CAAC,iBAAiB,EAAC;;EAE3C,iBAAiB,CAAC,SAAS,GAAG,KAAK,CAAC,UAAS;;;EAG7C,IAAI,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EACpD,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,0BAA0B,EAAC;;;;EAI9D,eAAe,CAAC,YAAY,CAAC,gBAAgB,EAAE,EAAE,EAAC;;EAElD,IAAI,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EACzD,oBAAoB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,+BAA+B,EAAC;EACxE,eAAe,CAAC,WAAW,CAAC,oBAAoB,EAAC;;EAEjD,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EAClD,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EAClD,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAC;EACpD,oBAAoB,CAAC,WAAW,CAAC,aAAa,EAAC;EAC/C,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAC;EAC1D,oBAAoB,CAAC,WAAW,CAAC,aAAa,EAAC;;;;;;;EAO/C,OAAO,CAAC,WAAW,CAAC,YAAY,EAAC;EACjC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAC;;;EAGlD,IAAI,QAAQ,EAAE;;;;;IAKZ,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;;IAEjD,IAAI,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;IACtD,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAC;IAC9D,YAAY,CAAC,WAAW,CAAC,iBAAiB,EAAC;;;IAG3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;MAC1D,IAAI,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAQ;MACnD,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAS;MACrD,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAC;KAC/C;;;IAGD,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC,UAAS;;;IAGhD,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,EAAE,QAAQ,EAAC;;IAExD,OAAO,CAAC,WAAW,CAAC,YAAY,EAAC;IACjC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAC;GACnD;;EAED,OAAO,CAAC,WAAW,CAAC,eAAe,EAAC;;EAEpC,QAAQ,CAAC,WAAW,CAAC,KAAK,EAAC;EAC3B,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAC;EAC9B;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE;EACnD,IAAI,SAAS,GAAG,KAAK,CAAC,OAAM;;;EAG5B,IAAI,EAAE,SAAS,YAAY,OAAO,CAAC,EAAE;IACnC,MAAM;GACP;;;EAGD,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,EAAC;EACzD,IAAI,QAAQ,EAAE;IACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAC;GACjC;EACF;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,QAAQ,EAAE;EACxD,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAC;EACxC,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAC;;;EAGrC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAC;EAC1B;;;;;;;AAOD,SAAS,CAAC,SAAS,CAAC,qBAAqB,GAAG,YAAY;EACtD,IAAI,UAAU,GAAG,KAAI;EACrB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAS;;EAE9B,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,sBAAsB,GAAE;;;EAGhD,eAAe,CAAC,SAAS,EAAE,UAAU,QAAQ,EAAE;IAC7C,UAAU,CAAC,WAAW,CAAC,WAAW,EAAE,QAAQ,EAAC;;IAE7C,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAC;GAChC,EAAC;;EAEF,UAAU,CAAC,mBAAmB,CAAC,WAAW,EAAC;EAC5C;;;;;;;;;AASD,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE;EAC9D,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAC;EACzE,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,EAAC;EAC/E,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAC;EACnE,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAC;;EAErE,IAAI,CAAC,aAAa;IAChB,EAAE,aAAa,YAAY,WAAW,CAAC;IACvC,CAAC,OAAO;IACR,CAAC,QAAQ,EAAE;IACX,MAAM;GACP;;EAED,IAAI,aAAa,GAAG,QAAQ;MACxB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;MAC1B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,EAAC;;EAE9B,aAAa,CAAC,SAAS,GAAG,cAAa;EACvC,OAAO,CAAC,YAAY,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAC;;;EAG1D,IAAI,cAAc,GAAG,GAAE;;EAEvB,IAAI,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,uBAAuB,EAAC;EAC7E,IAAI,YAAY,YAAY,WAAW,EAAE;IACvC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;GACnD;;EAED,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,mBAAmB,EAAC;EACrE,IAAI,QAAQ,YAAY,WAAW,EAAE;IACnC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;GAC/C;;EAED,IAAI,gBAAgB,GAAG,QAAQ;MAC3B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB,EAAC;EACvC,cAAc,CAAC,IAAI,CAAC,gBAAgB,EAAC;;;;;;;EAOrC,OAAO,CAAC,YAAY,CAAC,YAAY,EAAE,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;;;EAG9D,IAAI,QAAQ,EAAE;IACZ,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAC;IAClC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAC;IACjD,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAC;GAC1D,MAAM;IACL,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAC;IAC9C,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAC;IACpD,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAC;GACvD;;;EAGD,IAAI,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,GAAE;EACtD,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAC;EAC7C;;;;;;;;;AASD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,QAAQ,EAAE;EACnD,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC;EAC9D;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,sBAAsB,GAAG,YAAY;;EAEvD,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,OAAM;;EAEzC,IAAI,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAM;EAChG,IAAI,kBAAkB,GAAG,aAAa,KAAK,qBAAoB;;EAE/D,OAAO,kBAAkB;EAC1B;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,mBAAmB,GAAG,UAAU,QAAQ,EAAE;EAC5D,IAAI,aAAa,GAAG,QAAQ;MACxB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC;MAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,iBAAiB,EAAC;;EAElC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,eAAe,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAC;EACtE,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,cAAa;;;EAG3C,IAAI,QAAQ,EAAE;IACZ,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAC;GAC9D,MAAM;IACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAC;GAC3D;EACF;;AAED,IAAI,MAAM,GAAG;;;;;;EAMX,sBAAsB,EAAE,YAAY;IAClC,IAAI,UAAU,GAAG,0BAAyB;IAC1C,IAAI,OAAM;IACV,IAAI;MACF,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,EAAC;MACrD,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,UAAU,CAAC,QAAQ,GAAE;MAC5E,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,EAAC;MAC5C,OAAO,MAAM;KACd,CAAC,OAAO,SAAS,EAAE;MAClB,OAAO,KAAK;KACb;GACF;EACF;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,QAAQ,EAAE;EACnD,IAAI,IAAI,CAAC,6BAA6B,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;;;;IAItE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAC;;IAEnE,IAAI,OAAO,EAAE;MACX,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,eAAe,EAAC;MACrD,IAAI,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,eAAe,EAAC;;;MAGxD,IAAI,SAAS,IAAI,YAAY,EAAE;QAC7B,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,EAAC;OACvD;KACF;GACF;EACF;;;;;;;;AAQD,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,QAAQ,EAAE;EACxD,IAAI,IAAI,CAAC,6BAA6B,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;IACtE,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,EAAC;;IAEnE,IAAI,OAAO,EAAE;MACX,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,eAAe,EAAC;MACrD,IAAI,YAAY,GAAG,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,KAAI;;MAE9E,IAAI,YAAY,KAAK,IAAI,EAAE;QACzB,IAAI,CAAC,WAAW,CAAC,YAAY,KAAK,MAAM,EAAE,QAAQ,EAAC;OACpD;KACF;GACF;EACF;;;;;;;;;;;;AAYD,SAAS,CAAC,SAAS,CAAC,sBAAsB,GAAG,YAAY;EACvD,IAAI,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAC;EACnD,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC,0BAA0B,EAAC;EACtF,cAAc,CAAC,SAAS,GAAG,KAAI;EAC/B,OAAO,cAAc;EACtB;AACD,AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;;;;"}