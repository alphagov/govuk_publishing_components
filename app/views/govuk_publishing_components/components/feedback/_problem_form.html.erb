<%
 absolute_links_helper = GovukPublishingComponents::Presenters::AbsoluteLinksHelper.new()
%>

<form action="<%= absolute_links_helper.make_url_absolute('/contact/govuk/problem_reports') %>"
  id="something-is-wrong"
  class="gem-c-feedback__form js-feedback-form"
  data-track-category="Onsite Feedback"
  data-track-action="GOV.UK Send Form"
  method="post"
  hidden>

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      <div class="gem-c-feedback__error-summary gem-c-feedback__js-show js-errors" tabindex="-1" hidden></div>

      <input type="hidden" name="url" value="<%= url_without_pii %>">

      <h3 class="gem-c-feedback__form-heading"><%= t("components.feedback.help_us_improve_govuk") %></h3>
      <p id="feedback_explanation" class="gem-c-feedback__form-paragraph"><%= t("components.feedback.dont_include_personal_info") %></p>

      <% # Added for spam bots only %>
      <div class="govuk-visually-hidden" aria-hidden="true">
        <label for="giraffe">This field is for robots only. Please leave blank</label>
        <input id="giraffe" name="giraffe" type="text" pattern=".{0}" tabindex="-1" autocomplete="off">
      </div>

      <%= render "govuk_publishing_components/components/textarea", {
        label: {
          text: t("components.feedback.what_doing")
        },
        name: "what_doing",
        rows: 3,
        describedby: "feedback_explanation"
      } %>

      <%= render "govuk_publishing_components/components/textarea", {
        label: {
          text: t("components.feedback.what_wrong")
        },
        name: "what_wrong",
        rows: 3
      } %>

      <%
        unless disable_ga4 
          heading_text = t("components.feedback.help_us_improve_govuk", locale: :en)
          ga4_submit_button_event = {
            event_name: "form_submit",
            type: "feedback",
            text: t("components.feedback.send", locale: :en),
            section: heading_text,
            tool_name: heading_text
          }.to_json
        end
      %>

      <%= render "govuk_publishing_components/components/button", {
        text: t("components.feedback.send"),
        data_attributes: {
          ga4_event: ga4_submit_button_event
        }
      } %>

      <button
        class="govuk-button govuk-button--secondary gem-c-feedback__close gem-c-feedback__js-show js-close-form"
        data-track-category="Onsite Feedback"
        data-track-action="GOV.UK Close Form"
        aria-controls="something-is-wrong"
        aria-expanded="true">
        <%= t("components.feedback.close") %>
      </button>
    </div>
  </div>
</form>

<%
  # I've added the following script inline in case of a scenario where a bot is able to parse the page,
  # without downloading any of the external scripts.
  # This seems to be a more reliable way to make sure the script is executed.
%>

<%= javascript_tag nonce: true do -%>
  document.addEventListener("DOMContentLoaded", function () {
    var input = document.querySelector("#giraffe"),
      form = document.querySelector("#something-is-wrong")

    form.addEventListener("submit", spamCapture);

    function spamCapture(e) {
      if (input.value.length !== 0) return;
      e.preventDefault();
    }
  });
<% end -%>
