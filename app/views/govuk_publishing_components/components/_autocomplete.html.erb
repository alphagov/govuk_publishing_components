<%
  add_gem_component_stylesheet("autocomplete")

  id ||= "autocomplete-#{SecureRandom.hex(4)}"
  name ||= "autocomplete"
  label ||= nil
  value ||= nil
  options ||= []
  local_assigns[:margin_bottom] ||= 6
  shared_helper = GovukPublishingComponents::Presenters::SharedHelper.new(local_assigns)

  error_id = "error-#{SecureRandom.hex(4)}"
  error_items ||= []

  classes = %w(gem-c-autocomplete govuk-form-group)
  classes << "govuk-form-group--error" if error_items.any?
  classes << shared_helper.get_margin_bottom
  input_class = %w(govuk-input)
  input_class << "govuk-input--error" if error_items.any?

  source ||= false
  source_key ||= "suggestions"

  if !label || (!options.any? && !source)
    raise ArgumentError, "The autocomplete component needs at least one option or a source, and a label in order to render."
  end
%>
<%= tag.div class: classes, data: { module: "autocomplete", source:, source_key: } do %>
  <%= render "govuk_publishing_components/components/label", {
    text: label,
    html_for: id,
  } %>
  <% if error_items.any? %>
    <%= render "govuk_publishing_components/components/error_message", {
      id: error_id,
      items: error_items,
    } %>
  <% end %>
  <%= tag.input name: name,
                value: value,
                id: id,
                class: input_class,
                list: "#{id}-list",
                type: "text" %>
  <%= tag.datalist id: "#{id}-list" do %>
    <% options.each do |option| %>
      <%= tag.option(value: option) %>
    <% end %>
  <% end %>
<% end %>
