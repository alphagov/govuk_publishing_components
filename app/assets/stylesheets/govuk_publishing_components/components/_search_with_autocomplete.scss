@import "govuk_publishing_components/individual_component_support";

// These styles are adapted from the original Accessibile Autocomplete component stylesheet, mostly
// to remove superfluous styles that are already provided by the GOV.UK Design System, and to adapt
// the styling to match the new GOV.UK search box designs (e.g. to remove the zebra striping on
// rows, adjust whitespace, and manage the tweaked markup we use in the suggestion template).
//
// Note that most selectors targetted within this file are those constructed by the Accessible
// Autocomplete component, so they may not 100% match our own component conventions.
//
// see https://github.com/alphagov/accessible-autocomplete/blob/main/src/autocomplete.css

// TODO: These are duplicated from _search.scss. Should we move them to a shared place?
$input-size: 40px;
$large-input-size: 50px;

// Helps to make the autocomplete menu as wide as the entire search box _including_ the submit
// button, not just the width of the input field.
@mixin enhance-autocomplete-menu-width($button-size) {
  margin-right: -$button-size;
}

.gem-c-search-with-autocomplete {
  .autocomplete__wrapper {
    position: relative;
  }

  .autocomplete__menu {
    margin: 0;
    padding: 0;
    overflow-x: hidden;

    background-color: govuk-colour("white");
    border: 1px solid $govuk-border-colour;
    border-top: 0;

    @include enhance-autocomplete-menu-width($input-size);

    &--visible {
      display: block;
    }

    &--hidden {
      display: none;
    }

    &--overlay {
      position: absolute;
      left: 0;
      top: 100%;
      z-index: 100;

      box-shadow: rgba(0, 0, 0, 0.256863) 0px 2px 6px;
    }

    &--inline {
      position: relative;
    }
  }

  // Override menu margin in large mode
  // Cannot use parent selector here as gem-c-search--large is between parent selectors
  .gem-c-search--large .autocomplete__menu {
    @include enhance-autocomplete-menu-width($large-input-size);
  }

  .autocomplete__option {
    display: block;

    cursor: pointer;

    @include govuk-font(19);

    // Ensure only the parent option receives pointer events
    & > * {
      pointer-events: none;
    }

    // Hover styling applies to both the currently keyboard-selected option and possibly
    // additionally another option that is hovered over by mouse. Only the keyboard-selected option
    // gets focus color applied to its text.
    &--focused,
    &:hover,
    &:focus-visible {
      background-color: govuk-colour("light-grey");
      outline: none;
    }
    &:focus-visible {
      .autocomplete__suggestion-text {
        background-color: $govuk-focus-colour;
      }
    }

    &--search-icon {
      width: $input-size;
      height: $input-size;

      background-image: url("govuk_publishing_components/icon-search.svg");
      background-repeat: no-repeat;
    }

    .autocomplete__option-wrapper {
      display: flex;
      align-items: center;
      margin: 0 govuk-spacing(2);
      padding: govuk-spacing(1) 0;

      border-bottom: 1px solid govuk-colour("mid-grey");
    }

    &:last-child .autocomplete__option-wrapper {
      border-bottom: 0;
    }
  }

  @media (forced-colors: active) {
    .autocomplete__menu {
      border-color: FieldText;
    }

    .autocomplete__option {
      background-color: Field;
      color: FieldText;
    }

    .autocomplete__option--focused,
    .autocomplete__option:hover {
      forced-color-adjust: none; /* prevent backplate from obscuring text */
      background-color: Highlight;
      border-color: Highlight;
      color: HighlightText;

      /* Prefer SelectedItem / SelectedItemText in browsers that support it */
      background-color: SelectedItem;
      border-color: SelectedItem;
      color: SelectedItemText;
      outline-color: SelectedItemText;
    }
  }
}
