{
  "version": 3,
  "sources": ["../javascripts/govuk_publishing_components/modules/youtube-link-enhancement.js"],
  "sourcesContent": ["class YoutubeLinkEnhancement {\n  constructor($element, $classOverride) {\n    this.$element = $element\n    this.$classOverride = typeof $classOverride !== 'undefined' ? $classOverride : 'gem-c-govspeak__youtube-video'\n    window.apiScriptInserted = window.apiScriptInserted !== undefined ? window.apiScriptInserted : false\n    window.playerApiReady = window.playerApiReady !== undefined ? window.playerApiReady : false\n\n    // way to do the queued inserts from before but w/ window instead...\n    window.YoutubeQueuedInserts = (window.YoutubeQueuedInserts && window.YoutubeQueuedInserts.length) ? window.YoutubeQueuedInserts : [];\n    window.onYouTubePlayerAPIReady = window.onYouTubePlayerAPIReady || function () {\n      window.playerApiReady = true\n      for (var i = 0; i < window.YoutubeQueuedInserts.length; i++) {\n        window.YoutubeQueuedInserts[i].call()\n      }\n    }    \n  }\n\n  init() {\n    if (!this.campaignCookiesAllowed()) {\n      this.startModule = this.startModule.bind(this)\n      window.addEventListener('cookie-consent', this.startModule)\n      return\n    }\n    this.startModule()\n  }\n\n  startModule() {\n    window.removeEventListener('cookie-consent', this.startModule)\n    var $youtubeLinks = this.$element.querySelectorAll('a[href*=\"youtube.com\"], a[href*=\"youtu.be\"]')\n\n    if ($youtubeLinks.length > 0) {\n      this.insertApiScript()\n    }\n\n    for (var i = 0; i < $youtubeLinks.length; ++i) {\n      var $link = $youtubeLinks[i]\n      var href = $link.getAttribute('href')\n      var hasTracking = $link.hasAttribute('data-youtube-player-analytics')\n      var options = {\n        link: $link\n      }\n\n      if (hasTracking) {\n        options.tracking = {\n          hasTracking: hasTracking,\n          category: $link.getAttribute('data-youtube-player-analytics-category')\n        }\n      }\n\n      if (href.indexOf('/live_stream') >= 0) {\n        var channelId = this.parseLivestream(href)\n\n        if (!this.hasDisabledEmbed($link) && channelId) {\n          options.channel = channelId\n          this.setupVideo(options)\n        }\n      } else {\n        var videoId = this.parseVideoId(href)\n        if (!this.hasDisabledEmbed($link) && videoId) {\n          options.videoId = videoId\n          this.setupVideo(options)\n        }\n      }\n    }\n  }\n\n  hasDisabledEmbed($link) {\n    return $link.getAttribute('data-youtube-player') === 'off'\n  }\n\n  setupVideo(options) {\n    var elementId = this.nextId()\n    var $link = options.link\n\n    var id = options.videoId ? options.videoId : options.channel\n\n    var parentPara = $link.parentNode\n    var parentContainer = parentPara.parentNode\n\n    var youtubeVideoContainer = document.createElement('div')\n    youtubeVideoContainer.className += this.$classOverride\n    youtubeVideoContainer.innerHTML = '<span id=\"' + elementId + '\" data-video-id=\"' + id + '\"></span>'\n\n    options.title = $link.textContent\n\n    parentContainer.replaceChild(youtubeVideoContainer, parentPara)\n    this.insertVideo(elementId, options)\n  }\n\n  insertVideo(elementId, options) {\n    var channelId = ''\n    var videoId = ''\n\n    if (options.channel) {\n      channelId = options.channel\n      videoId = 'live_stream'\n    } else {\n      videoId = options.videoId\n    }\n\n    var videoInsert = function () {\n      new window.YT.Player(elementId, { // eslint-disable-line no-new\n        videoId: videoId,\n        host: 'https://www.youtube-nocookie.com',\n        playerVars: {\n          // enables the player to be controlled via IFrame or JavaScript Player API calls\n          enablejsapi: 1,\n          origin: window.location.origin,\n          // don't show related videos\n          rel: 0,\n          // disable option to allow single key shortcuts due to (WCAG SC 2.1.4)\n          // https://www.w3.org/WAI/WCAG21/quickref/#character-key-shortcuts\n          disablekb: 1,\n          // prevent the YouTube logo from displaying in the control bar\n          modestbranding: 1,\n          // To support live_stream videos\n          channel: channelId\n        },\n        events: {\n          onReady: function (event) {\n            // update iframe title attribute once video is ready\n            // this is done to let screen reader users know that they are focused on a video\n            // https://github.com/alphagov/govuk_publishing_components/pull/908#discussion_r302913995\n            var videoTitle = options.title\n            event.target.getIframe().title = videoTitle + ' (video)'\n          },\n          onStateChange: function (event) {\n            var eventData = event.data\n            var eventTarget = event.target\n            var states = {\n              /* eslint-disable quote-props */\n              '-1': 'VideoUnstarted',\n              '0': 'VideoEnded',\n              '1': 'VideoPlaying',\n              '2': 'VideoPaused',\n              '3': 'VideoBuffering',\n              '5': 'VideoCued'\n              /* eslint-enable */\n            }\n            if (states[eventData] && options.tracking && options.tracking.hasTracking &&\n                window.GOVUK.analytics && window.GOVUK.analytics.trackEvent) {\n              var tracking = {\n                category: options.tracking.category,\n                action: states[eventData],\n                label: { transport: 'beacon', label: eventTarget.getVideoData && eventTarget.getVideoData().title }\n              }\n\n              window.GOVUK.analytics.trackEvent(tracking.category, tracking.action, tracking.label)\n            }\n          }\n        }\n      })\n    }\n\n    videoInsert = videoInsert.bind(this)\n\n    if (window.playerApiReady) {\n      videoInsert.call()\n    } else {\n      window.YoutubeQueuedInserts.push(videoInsert)\n    }\n  }\n\n  campaignCookiesAllowed() {\n    var cookiePolicy = window.GOVUK.getConsentCookie()\n    return cookiePolicy !== null ? cookiePolicy.campaigns : true\n  }\n\n  nextId() {\n    this.embedCount = this.embedCount || 0\n    this.embedCount += 1\n    return 'youtube-' + this.embedCount\n  }\n\n  insertApiScript() {\n    if (window.apiScriptInserted) {\n      return\n    }\n\n    var tag = document.createElement('script')\n    tag.src = 'https://www.youtube.com/player_api'\n    var firstScriptTag = document.getElementsByTagName('script')[0]\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n    window.apiScriptInserted = true\n  }\n\n  parseLivestream(url) {\n    var matches = url.match(/channel=([^&]*)/)\n\n    if (matches) {\n      return matches[1]\n    }\n  }\n\n  // This is a public class method so it can be used outside of this embed to\n  // check that user input for videos will be supported in govspeak\n  parseVideoId(url) {\n    var parts\n\n    if (url.indexOf('youtube.com') > -1) {\n      var params = {}\n      parts = url.split('?')\n      if (parts.length === 1) {\n        return\n      }\n      parts = parts[1].split('&')\n      for (var i = 0; i < parts.length; i++) {\n        var part = parts[i].split('=')\n        params[part[0]] = part[1]\n      }\n      return params.v\n    } else if (url.indexOf('youtu.be') > -1) {\n      parts = url.split('/')\n      return parts.pop()\n    }\n  }\n}\n\nexport default YoutubeLinkEnhancement;\n"],
  "mappings": "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",
  "names": []
}
