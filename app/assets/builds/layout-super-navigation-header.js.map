{
  "version": 3,
  "sources": ["../../javascript/layout-super-navigation-header.js"],
  "sourcesContent": ["var SETTINGS = {\n  breakpoint: {\n    desktop: 769\n  },\n  label: {\n    hide: 'data-text-for-hide',\n    show: 'data-text-for-show'\n  }\n}\n\nvar setLabel = function ($button, showOrHide) {\n  var newLabel = $button.getAttribute(SETTINGS.label[showOrHide])\n\n  if (newLabel) {\n    $button.setAttribute('aria-label', newLabel)\n  }\n}\n\n// Wrapper functions to contain all of the mechanisms needed for hiding and\n// toggling the menus.\nvar hide = function ($button, $menu) {\n  $button.setAttribute('aria-expanded', false)\n  $button.classList.remove('gem-c-layout-super-navigation-header__open-button')\n  $menu.setAttribute('hidden', 'hidden')\n  setLabel($button, 'show')\n}\nvar show = function ($button, $menu) {\n  $button.setAttribute('aria-expanded', true)\n  $button.classList.add('gem-c-layout-super-navigation-header__open-button')\n  $menu.removeAttribute('hidden')\n  setLabel($button, 'hide')\n}\n\nvar toggle = function ($button, $menu) {\n  var isOpen = $button.getAttribute('aria-expanded') === 'true'\n  var trackingLabel = $button.getAttribute('data-tracking-key')\n  if (isOpen) {\n    hide($button, $menu)\n  } else {\n    show($button, $menu)\n  }\n\n  // Fire analytics if analytics are available\n  if (window.GOVUK.analytics && window.GOVUK.analytics.trackEvent && trackingLabel) {\n    window.GOVUK.analytics.trackEvent('headerClicked', trackingLabel + (isOpen ? 'Closed' : 'Opened'), { label: 'none' })\n  }\n}\n\n// Clicking an element inside a `button` element causes the `event.target` to\n// be the inside element, not the button. This can be taken care of by setting\n// the CSS pointer-events to be none, but that doesn't work for older\n// browsers, won't work for people with CSS turned off, or for people who are\n// using CSS overrides.\n//    This checks if the $element is the `elementType`; if it is, it gets\n// returned; if not it recursively checks to see if the parent element is a\n// `elementType`. This means that it can be used with `pointer-events: none`.\nvar closestParentIncluding = function ($element, elementType) {\n  if ($element.tagName.toLowerCase() === elementType.toLowerCase()) {\n    return $element\n  }\n  return closestParentIncluding($element.parentNode, elementType)\n}\n\n// Searched the previous elements to find one with the same tag as set in\n// `elementType` . If it's found the element is returned; if not, it returns\n// null.\nvar closestPrevious = function ($element, elementType) {\n  if ($element === null) {\n    return null\n  }\n\n  // Using `previousSibling` means that there is a possibility that the\n  // $element could be a text node or a comment node - checking the `nodeType`\n  // of the element will ensure that it's a real element.\n  if ($element.nodeType === 1 && $element.tagName.toLowerCase() === elementType.toLowerCase()) {\n    return $element\n  }\n\n  // If `previousElementSibling` can be used then let's use it as it'll be\n  // slightly faster since it skips things that aren't elements. If not,\n  // `previousSibling` can still be used as there's a `nodeType` check.\n  var previousElement = $element.previousElementSibling || $element.previousSibling\n\n  return closestPrevious(previousElement, elementType)\n}\n\nclass LayoutSuperNavigationHeader {\n\n  constructor($module) {\n    this.$module = $module\n    this.$searchToggle = this.$module.querySelector('#super-search-menu-toggle')\n    this.$searchMenu = this.$module.querySelector('#super-search-menu')\n\n    // The menu toggler buttons need three attributes for this to work:\n    //  - `aria-controls` contains the id of the menu to be toggled\n    //  - `data-toggle-mobile-group` is the group that the menu belongs to on\n    //    smaller screens\n    //  - `data-toggle-desktop-group` is the group that the menu belongs to on\n    //    larger screens\n    this.$buttons = this.$module.querySelectorAll(\n      'button[aria-controls][data-toggle-mobile-group][data-toggle-desktop-group]'\n    )\n\n    this.hiddenButtons = this.$module.querySelectorAll('button[hidden]')    \n  }\n\n  updateStates() {\n    // Check whether any of the dropdown menus are open.\n    var $openButton = this.$module.querySelector('[aria-expanded=\"true\"][data-toggle-desktop-group=\"top\"]')\n    // Gets the open dropdown menu\n    var $openMenu = $openButton ? this.$module.querySelector('#' + $openButton.getAttribute('aria-controls')) : null\n    // If there is an open dropdown menu, get the height of the dropdown menu.\n    var margin = $openMenu ? $openMenu.offsetHeight : 0\n\n    // Make space for the dropdown menu.\n    this.$module.style.marginBottom = margin + 'px'\n  }\n\n  buttonHandler(event) {\n    var $target = closestParentIncluding(event.target, 'button')\n    var $targetMenu = this.$module.querySelector('#' + $target.getAttribute('aria-controls'))\n\n    var toggleGroupAttribute = 'data-toggle-desktop-group'\n    var toggleGroupName = $target.getAttribute(toggleGroupAttribute)\n    var toggleGroupList = this.$module.querySelectorAll('[' + toggleGroupAttribute + '=\"' + toggleGroupName + '\"]')\n\n    for (var k = 0; k < toggleGroupList.length; k++) {\n      var $element = toggleGroupList[k]\n      if ($element !== $target) {\n        var $menu = this.$module.querySelector('#' + $element.getAttribute('aria-controls'))\n        hide($element, $menu)\n      }\n    }\n\n    toggle($target, $targetMenu)\n\n    this.$module.style.marginBottom = $targetMenu.offsetHeight + 'px'\n  }\n\n  init() {\n    for (var j = 0; j < this.$buttons.length; j++) {\n      var $button = this.$buttons[j]\n      $button.addEventListener('click', this.buttonHandler.bind(this), true)\n    }\n\n    // The toggle buttons are hardcoded to be hidden in the markup - this means\n    // that people without JavaScript turned on won't have buttons present that\n    // don't do anything.\n    //     Since JavaScript is enabled we can remove the hidden attribute from\n    // the buttons so that they're perceivable by users.\n    //     As the toggle buttons are now selectable, we should prevent the links\n    // from being selectable to avoid confusion.\n    for (var i = 0; i < this.hiddenButtons.length; i++) {\n      var $element = this.hiddenButtons[i]\n      $element.removeAttribute('hidden')\n\n      var closestSiblingLink = closestPrevious($element, 'a')\n\n      if (closestSiblingLink) {\n        closestSiblingLink.setAttribute('hidden', 'hidden')\n      }\n    }\n\n    this.$module.querySelector('.gem-c-layout-super-navigation-header__search-item-link')\n      .setAttribute('hidden', 'hidden')\n\n    // Navigation menu and search menu are hardcoded to be open in the markup -\n    // this means that the menu still makes sense with CSS and JavaScript turned\n    // off.\n    //     The menus now need to be hidden as part of the JavaScript\n    // initialisation.\n    //   - On both mobile and desktop, this means hiding the search menu\n    //   - On mobile, this means hiding the navigation\n    //   - On desktop, this means hiding the navigation button, showing the\n    //     second level navigation menu\n    hide(this.$searchToggle, this.$searchMenu)\n    this.updateStates()\n\n    // The menu needs to be updated when the window is resized to make sure that\n    // the space needed for the dropdown menu is correct.\n    window.addEventListener('resize', this.updateStates.bind(this), { passive: true })\n\n    this.$module.classList.add('js-module-initialised')\n  }\n}\n\nexport default LayoutSuperNavigationHeader;\n"],
  "mappings": "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",
  "names": []
}
